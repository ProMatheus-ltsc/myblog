(window.webpackJsonp=window.webpackJsonp||[]).push([[281],{1645:function(t,e,r){"use strict";r.r(e);var n=r(65),a=Object(n.a)({},(function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h1",{attrs:{id:"jvm最佳实践"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#jvm最佳实践"}},[t._v("#")]),t._v(" JVM最佳实践")]),t._v(" "),r("p",[r("a",{attrs:{href:"https://blog.csdn.net/sinat_35368027/article/details/129617991?spm=1001.2014.3001.5501",target:"_blank",rel:"noopener noreferrer"}},[t._v("1. JVM简介"),r("OutboundLink")],1)]),t._v(" "),r("p",[t._v("本文主要介绍了JVM的概念、作用、市场主流实现、学习意义和体系结构。JVM是Java程序能够实现跨平台的基础，它的作用是加载Java字节码，然后翻译或解释成对应平台的机器码再交由CPU执行。市场上主流的JVM有HotSpot、JRockit、J9、TaobaoJVM等。学习JVM可以帮助我们从平台角度提高解决问题的能力，例如防止内存泄漏、优化线程锁的使用、进行垃圾回收、提高系统吞吐量和降低延迟等。常见的JVM Bug包括内存泄漏、死锁、线程安全问题等。")]),t._v(" "),r("p",[r("a",{attrs:{href:"https://blog.csdn.net/sinat_35368027/article/details/129618129?spm=1001.2014.3001.5501",target:"_blank",rel:"noopener noreferrer"}},[t._v("2. 类加载子系统分析与实践"),r("OutboundLink")],1)]),t._v(" "),r("p",[r("a",{attrs:{href:"https://blog.csdn.net/sinat_35368027/article/details/129618288?spm=1001.2014.3001.5501",target:"_blank",rel:"noopener noreferrer"}},[t._v("3. 字节码解读分析与实践"),r("OutboundLink")],1)]),t._v(" "),r("p",[r("a",{attrs:{href:"https://blog.csdn.net/sinat_35368027/article/details/129618304?spm=1001.2014.3001.5501",target:"_blank",rel:"noopener noreferrer"}},[t._v("4. 字节码增强技术分析与实践"),r("OutboundLink")],1)]),t._v(" "),r("p",[r("a",{attrs:{href:"https://blog.csdn.net/sinat_35368027/article/details/129618320?spm=1001.2014.3001.5501",target:"_blank",rel:"noopener noreferrer"}},[t._v("5. JVM常用工具应用"),r("OutboundLink")],1)]),t._v(" "),r("p",[r("a",{attrs:{href:"https://blog.csdn.net/sinat_35368027/article/details/129618563?spm=1001.2014.3001.5501",target:"_blank",rel:"noopener noreferrer"}},[t._v("6. JVM运行时内存分析"),r("OutboundLink")],1)]),t._v(" "),r("p",[r("a",{attrs:{href:"https://blog.csdn.net/sinat_35368027/article/details/129618583?spm=1001.2014.3001.5501",target:"_blank",rel:"noopener noreferrer"}},[t._v("7. JVM内存逃逸分析与实践"),r("OutboundLink")],1)]),t._v(" "),r("p",[r("a",{attrs:{href:"https://blog.csdn.net/sinat_35368027/article/details/129618599?spm=1001.2014.3001.5501",target:"_blank",rel:"noopener noreferrer"}},[t._v("8. JVM中的内存溢出"),r("OutboundLink")],1)]),t._v(" "),r("p",[r("a",{attrs:{href:"https://blog.csdn.net/sinat_35368027/article/details/129618636?spm=1001.2014.3001.5501",target:"_blank",rel:"noopener noreferrer"}},[t._v("9. JVM内存泄漏分析与实践"),r("OutboundLink")],1)]),t._v(" "),r("p",[r("a",{attrs:{href:"https://blog.csdn.net/sinat_35368027/article/details/129618646?spm=1001.2014.3001.5501",target:"_blank",rel:"noopener noreferrer"}},[t._v("10. GC简介"),r("OutboundLink")],1)]),t._v(" "),r("p",[r("a",{attrs:{href:"https://blog.csdn.net/sinat_35368027/article/details/129618677?spm=1001.2014.3001.5501",target:"_blank",rel:"noopener noreferrer"}},[t._v("11. JVM中常用垃圾回收器分析与实践"),r("OutboundLink")],1)])])}),[],!1,null,null,null);e.default=a.exports}}]);