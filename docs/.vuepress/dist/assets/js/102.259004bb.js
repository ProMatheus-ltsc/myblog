(window.webpackJsonp=window.webpackJsonp||[]).push([[102],{1412:function(s,a,t){"use strict";t.r(a);var n=t(65),e=Object(n.a)({},(function(){var s=this,a=s.$createElement,n=s._self._c||a;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h1",{attrs:{id:"数据库和集合基本操作"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#数据库和集合基本操作"}},[s._v("#")]),s._v(" 数据库和集合基本操作")]),s._v(" "),n("p"),n("div",{staticClass:"table-of-contents"},[n("ul",[n("li",[n("a",{attrs:{href:"#_1-mongodb-简介"}},[s._v("1 MongoDB 简介")]),n("ul",[n("li",[n("a",{attrs:{href:"#_1-1-简介"}},[s._v("1.1 简介")])]),n("li",[n("a",{attrs:{href:"#_1-2-面向集合的存储"}},[s._v("1.2 面向集合的存储")])]),n("li",[n("a",{attrs:{href:"#_1-3-虚拟机开机配置"}},[s._v("1.3 虚拟机开机配置")])]),n("li",[n("a",{attrs:{href:"#_1-4特点和适用场景"}},[s._v("1.4特点和适用场景")])])])]),n("li",[n("a",{attrs:{href:"#_2-基本概念"}},[s._v("2 基本概念")]),n("ul",[n("li",[n("a",{attrs:{href:"#_2-1-数据库"}},[s._v("2.1 数据库")])]),n("li",[n("a",{attrs:{href:"#_2-2-文档"}},[s._v("2.2 文档")])]),n("li",[n("a",{attrs:{href:"#_2-3-文档的逻辑联系"}},[s._v("2.3 文档的逻辑联系")])]),n("li",[n("a",{attrs:{href:"#_2-4-集合"}},[s._v("2.4 集合")])]),n("li",[n("a",{attrs:{href:"#_2-5-元数据"}},[s._v("2.5 元数据")])])])]),n("li",[n("a",{attrs:{href:"#_3-安装"}},[s._v("3 安装")])]),n("li",[n("a",{attrs:{href:"#_4-数据库的创建和销毁"}},[s._v("4 数据库的创建和销毁")]),n("ul",[n("li",[n("a",{attrs:{href:"#_4-1-创建数据库"}},[s._v("4.1 创建数据库")])]),n("li",[n("a",{attrs:{href:"#_4-2-销毁数据库"}},[s._v("4.2 销毁数据库")])])])]),n("li",[n("a",{attrs:{href:"#_5-集合的创建和删除"}},[s._v("5 集合的创建和删除")]),n("ul",[n("li",[n("a",{attrs:{href:"#_5-1-创建集合"}},[s._v("5.1 创建集合")])]),n("li",[n("a",{attrs:{href:"#_5-2-删除集合"}},[s._v("5.2 删除集合")])])])]),n("li",[n("a",{attrs:{href:"#_6-向集合中插入数据"}},[s._v("6 向集合中插入数据")]),n("ul",[n("li",[n("a",{attrs:{href:"#_6-1-使用-insert"}},[s._v("6.1 使用 insert()")])]),n("li",[n("a",{attrs:{href:"#_6-2-使用-save"}},[s._v("6.2 使用 save()")])])])])])]),n("p"),s._v(" "),n("h2",{attrs:{id:"_1-mongodb-简介"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-mongodb-简介"}},[s._v("#")]),s._v(" 1 MongoDB 简介")]),s._v(" "),n("p",[s._v("如果你之前只接触过关系型数据库如 Oracle、Mysql 或 SQL Server，在学习 MongoDB 时可能会感到不安，突然有一款数据库不支持外键，不支持事务，不支持数据类型约定，会给人一种没法用的感觉。")]),s._v(" "),n("p",[s._v("MongoDB 就是这样一款非关系型的数据库，什么叫非关系型？就是把数据直接放进一个大仓库，不标号、不连线、单纯的堆起来。传统数据库由于受到各种关系的累赘，各种数据形式的束缚，难以处理海量数据以及超高并发的业务场景。")]),s._v(" "),n("p",[s._v("为了解决上述问题，必须有一款自废武功，以求在更高层次上突破瓶颈的数据库系统。就像张无忌忘记招式从而学习太极一样，摈弃了固有模式的 MongoDB 才能应对 Facebook 上亿比特的海量数据。")]),s._v(" "),n("h3",{attrs:{id:"_1-1-简介"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-简介"}},[s._v("#")]),s._v(" 1.1 简介")]),s._v(" "),n("p",[s._v("MongoDB 是一个介于关系数据库和非关系数据库之间的产品，是非关系数据库当中功能最丰富、最像关系数据库的。")]),s._v(" "),n("h4",{attrs:{id:"关系型数据库"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#关系型数据库"}},[s._v("#")]),s._v(" 关系型数据库")]),s._v(" "),n("p",[s._v("关系型数据库模型是把复杂的数据结构归结为简单的二元关系，即二维表格形式：有行和列的概念。在关系数据库中，对数据的操作几乎全部建立在一个或多个关系表格上，通过对这些关联表的表格分类、合并、连接或选取等运算来实现数据的管理。")]),s._v(" "),n("p",[s._v("其中的典型代表就是 MySQL 和 Oracle ，后者所属的美国甲骨文软件系统公司每年凭借该产品可创造数百亿美元的市场价值。")]),s._v(" "),n("h4",{attrs:{id:"非关系型数据库"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#非关系型数据库"}},[s._v("#")]),s._v(" 非关系型数据库")]),s._v(" "),n("p",[s._v("非关系型数据库也被称为 NoSQL 数据库。NoSQL 的本意是 Not Only SQL ，意为 “不仅仅是 SQL” ，并非 “不是 SQL” 。因此，NoSQL 的产生并不是要与关系型数据库对立，而是作为传统关系型数据库的一个补充。NoSQL 数据库在特定的场景下可以发挥出难以想象的高效率和高性能。")]),s._v(" "),n("p",[s._v("相比关系型数据库，NoSQL 存储数据时不支持太多约束，且各个文档集合之间没有紧密联系，尤其擅长超大规模数据的存储。")]),s._v(" "),n("p",[s._v("随着互联网 Web2.0 动态网站的兴起，传统的关系型数据库在应付规模日益扩大的海量数据时会显得力不从心，暴露了很多难以克服的问题，传统的关系型数据库 IO 瓶颈、性能瓶颈都难以有效突破。于是开始出现了大批针对特定场景、以高性能和使用便利为目的的功能特异化的数据库产品。NoSQL 数据库就是在这样的情景中诞生并得到了非常迅速的发展。NoSQL 不将数据的一致性作为重点，或者是作为次重点。")]),s._v(" "),n("p",[s._v("由于关系型数据库存储对数据之间存在高度的关联，在数据量达到上万亿比特时，关系型数据库所特有的约束和关联就会成为性能瓶颈。非关系型数据库采用了另一种思维方式，即不考虑数据之间千丝万缕的联系，存储也不需要固定的模式，这样无需多余的操作就能成倍地扩展数据量。")]),s._v(" "),n("p",[s._v("MongoDB 是由 C++ 语言编写的，是一个基于分布式文件存储的开源数据库系统。在高负载的情况下，添加更多的节点可以保证服务器性能。MongoDB 旨在为 Web 应用提供可扩展的高性能数据存储解决方案。")]),s._v(" "),n("p",[s._v("MongoDB 支持的数据结构非常松散,由 Key-Value 键值对组成，是类似 json 的 bson 格式，因此可以存储比较复杂的数据类型，字段值可以包含其它文档、数组，比如：")]),s._v(" "),n("div",{staticClass:"language-text line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("{\n   title: '上周实验学习报告',\n   body: '上周我们学习了 MongoDB 的知识',\n   by: 'shiyanlou',\n}\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br")])]),n("p",[s._v("如上是一个基本的文档形式，它存储了一封邮件的简易信息，从这里也可以看出 MongoDB 的‘松散’，它和关系型数据库不同，一个集合里面可以有不同格式的文档，而关系型数据库的每一条记录都拥有相同的字段。")]),s._v(" "),n("p",[s._v("MongoDB 最大的特点是支持的查询语言非常强大，其语法有点类似于面向对象的查询语言，几乎可以实现类似关系数据库单表查询的绝大部分功能，而且还支持对数据建立索引。MongoDB 是一个面向文档集合的、模式自由的非关系型数据库。")]),s._v(" "),n("h3",{attrs:{id:"_1-2-面向集合的存储"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-面向集合的存储"}},[s._v("#")]),s._v(" 1.2 面向集合的存储")]),s._v(" "),n("p",[s._v("在 MongoDB 中，一个数据库包含多个集合，类似于 MySQL 中一个数据库包含多个表；一个集合包含多个文档，类似于 MySQL 中一个表包含多条数据。")]),s._v(" "),n("p",[s._v("可以把集合记为表，文档记为一条记录。")]),s._v(" "),n("p",[s._v("这样命名是有原因的，因为 MongoDB 没有行列统一的表格式排列，而是采用一个大仓库的形式将所有数据包纳其中。文档也一样，它是一段自由独立的数据，受外部限制少，所以区别于关系型数据库的记录。")]),s._v(" "),n("h3",{attrs:{id:"_1-3-虚拟机开机配置"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-虚拟机开机配置"}},[s._v("#")]),s._v(" 1.3 虚拟机开机配置")]),s._v(" "),n("p",[s._v("启动 MongoDB 服务，因为 MongoDB 并不随系统一起启动，可能以下命令运行后会等一小段的时间才会启动完毕。")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("$ "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("service")]),s._v(" mongodb status     "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看服务状态")]),s._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("service")]),s._v(" mongodb start    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 启动服务")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("p",[s._v("进入 MongoDB 命令行操作界面(可能会出现 connect failed，多试几次就行)，在命令行中敲 "),n("code",[s._v("exit")]),s._v(" 可以退出。")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("mongo\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("实验中的布尔类型的 ture 用 1 代替，false 用 0 代替。")]),s._v(" "),n("h3",{attrs:{id:"_1-4特点和适用场景"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-4特点和适用场景"}},[s._v("#")]),s._v(" 1.4特点和适用场景")]),s._v(" "),n("p",[s._v("MongoDB 的主要特点如下：")]),s._v(" "),n("ul",[n("li",[s._v("是一个面向文档存储的数据库，操作起来比较简单和容易。")]),s._v(" "),n("li",[s._v("支持设置任何属性的索引以实现更快的排序和查询操作。")]),s._v(" "),n("li",[s._v("可以通过本地或者网络创建数据镜像，这使得 MongoDB 有更强的扩展性。")]),s._v(" "),n("li",[s._v("分布式设计，支持增加节点以提升存储空间。")]),s._v(" "),n("li",[s._v("支持丰富的查询表达式，查询指令使用 JSON 形式的标记，可轻易查询文档中内嵌的对象及数组。")]),s._v(" "),n("li",[s._v("Map/Reduce 用来对数据进行批量处理和聚合操作。")]),s._v(" "),n("li",[s._v("GridFS 用于存放大量小文件。")]),s._v(" "),n("li",[s._v("允许在服务端执行脚本，可以用 Javascript 编写某个函数，直接在服务端执行，也可以把函数的定义存储在服务端，下次直接调用即可。")]),s._v(" "),n("li",[s._v("支持 Ruby 、Python 、Java 、C++ 、PHP 、C# 等多种编程语言。")])]),s._v(" "),n("p",[s._v("MongoDB 的使用场景：")]),s._v(" "),n("ul",[n("li",[s._v("网站数据：MongoDB 非常适合实时的插入、更新与查询数据，并具备网站实时数据存储所需的复制及高度伸缩性。")]),s._v(" "),n("li",[s._v("缓存：由于性能很高，MongoDB 也适合作为信息基础设施的缓存层。在系统重启之前，由 MongoDB 搭建的持久化缓存层可以避免下层的数据源过载。")]),s._v(" "),n("li",[s._v("大尺寸，低价值的数据：使用传统的关系型数据库存储一些数据时可能会比较昂贵，在此之前，很多时候程序员往往会选择传统的文件进行存储。")]),s._v(" "),n("li",[s._v("高伸缩性的场景：MongoDB 非常适合由数十或数百台服务器组成的数据库。MongoDB 的路线图中已经包含对 MapReduce 引擎的内置支持。")]),s._v(" "),n("li",[s._v("用于对象及 JSON 数据的存储：MongoDB 的 BSON 数据格式非常适合文档化格式的存储及查询。")])]),s._v(" "),n("h2",{attrs:{id:"_2-基本概念"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-基本概念"}},[s._v("#")]),s._v(" 2 基本概念")]),s._v(" "),n("h3",{attrs:{id:"_2-1-数据库"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-数据库"}},[s._v("#")]),s._v(" 2.1 数据库")]),s._v(" "),n("ul",[n("li",[s._v("一个 MongoDB 可以创建多个数据库")]),s._v(" "),n("li",[s._v("使用 "),n("code",[s._v("show dbs")]),s._v(" 可以查看所有数据库的列表")]),s._v(" "),n("li",[s._v("执行 "),n("code",[s._v("db")]),s._v(" 命令则可以查看当前数据库对象或者集合")]),s._v(" "),n("li",[s._v("运行 "),n("code",[s._v("use")]),s._v(" 命令可以连接到指定的数据库")])]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("$ mongo    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 进入到mongo命令行")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" use "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("test")]),s._v("    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 连接到test数据库")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("p",[s._v("注意：数据库名可以是任何字符，但是不能有空格、点号和 $ 字符。")]),s._v(" "),n("h4",{attrs:{id:"结构"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#结构"}},[s._v("#")]),s._v(" 结构")]),s._v(" "),n("p",[s._v("不管我们学习什么数据库，首先都要了解其中的基础概念。在 MongoDB 中基本的概念是文档、集合、数据库，这也是该数据库的基本结构。")]),s._v(" "),n("p",[s._v("MongoDB 分四级存储：")]),s._v(" "),n("ul",[n("li",[s._v("数据库 db")]),s._v(" "),n("li",[s._v("文档集合 collection（相当于 MySQL 的数据表）")]),s._v(" "),n("li",[s._v("文档 document（相当于 MySQL 数据表里的一条数据）")]),s._v(" "),n("li",[s._v("字段")])]),s._v(" "),n("p",[s._v("下表清楚地展示了各级关系及描述：")]),s._v(" "),n("table",[n("thead",[n("tr",[n("th",[s._v("MongoDB 术语")]),s._v(" "),n("th",[s._v("MySQL 术语")]),s._v(" "),n("th",[s._v("说明")])])]),s._v(" "),n("tbody",[n("tr",[n("td",[s._v("database")]),s._v(" "),n("td",[s._v("database")]),s._v(" "),n("td",[s._v("数据库")])]),s._v(" "),n("tr",[n("td",[s._v("collection")]),s._v(" "),n("td",[s._v("table")]),s._v(" "),n("td",[s._v("集合 / 数据表")])]),s._v(" "),n("tr",[n("td",[s._v("document")]),s._v(" "),n("td",[s._v("row")]),s._v(" "),n("td",[s._v("文档 / 数据行")])]),s._v(" "),n("tr",[n("td",[s._v("field")]),s._v(" "),n("td",[s._v("field")]),s._v(" "),n("td",[s._v("字段")])])])]),s._v(" "),n("p",[s._v("对于熟悉 MySQL 数据库的同学来说，MongoDB 的数据库结构是可以很容易理解的。")]),s._v(" "),n("h3",{attrs:{id:"_2-2-文档"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-文档"}},[s._v("#")]),s._v(" 2.2 文档")]),s._v(" "),n("p",[s._v("文档是 MongoDB 的核心，类似于 SQLite 数据库（关系数据库）中的每一行数据。多个键及其关联的值放在一起就是文档。在 Mongodb 中使用一种类 json 的 bson 存储数据，bson 数据可以理解为在 json 的基础上添加了一些 json 中没有的数据类型。")]),s._v(" "),n("p",[s._v("例如：")]),s._v(" "),n("div",{staticClass:"language-text line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('{"company":"Chenshi keji"}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("h3",{attrs:{id:"_2-3-文档的逻辑联系"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-文档的逻辑联系"}},[s._v("#")]),s._v(" 2.3 文档的逻辑联系")]),s._v(" "),n("p",[s._v("假设有两个文档：")]),s._v(" "),n("div",{staticClass:"language-text line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('# user文档\n{\n   "name": "Tom Hanks",\n   "contact": "987654321",\n   "dob": "01-01-1991"\n}\n\n# address文档\n{\n   "building": "22 A, Indiana Apt",\n   "pincode": 123456,\n   "city": "chengdu",\n   "state": "sichuan"\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br")])]),n("p",[s._v("关系 1：嵌入式关系：把 address 文档嵌入到 user 文档中")]),s._v(" "),n("div",{staticClass:"language-text line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('# 这就是嵌入式的关系\n{\n   "name": "Tom Hanks",\n   "contact": "987654321",\n   "dob": "01-01-1991",\n   "address":\n   [{\n   "building": "22 A, Indiana Apt",\n   "pincode": 123456,\n   "city": "chengdu",\n   "state": "sichuan"\n   },\n   {\n   "building": "170 A, Acropolis Apt",\n   "pincode": 456789,\n   "city": "beijing",\n   "state": "beijing"\n   }]\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br")])]),n("p",[s._v("关系 2：引用式关系：将两个文档分开，通过引用文档的_id 字段来建立关系")]),s._v(" "),n("div",{staticClass:"language-text line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('# 这就是引用式关系\n{\n   "name": "Tom Benzamin",\n   "contact": "987654321",\n   "dob": "01-01-1991",\n   "address_ids": [\n      ObjectId("52ffc4a5d85242602e000000")    #对应address文档的id字段\n   ]\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br")])]),n("p",[s._v("在实际应用的时候，嵌入式关系比较适合一对一的关系，引用式关系比较适合一对多或者多对多的情况。")]),s._v(" "),n("h3",{attrs:{id:"_2-4-集合"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-4-集合"}},[s._v("#")]),s._v(" 2.4 集合")]),s._v(" "),n("p",[s._v("集合就是一组文档的组合，就相当于是"),n("strong",[s._v("关系数据库中的表")]),s._v("，在 MongoDB 中可以存储不同的文档结构的文档。")]),s._v(" "),n("p",[s._v("例如：")]),s._v(" "),n("div",{staticClass:"language-text line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('{"company":"Chenshi keji"} {"people":"man","name":"peter"}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("上面两个文档就可以存储在同一个集合中，在关系型数据库中是很难实现上述数据结构的，要么需要定义大量的字段，对于一些字段名不确定的属性，关系型数据库会更加力不从心。")]),s._v(" "),n("p",[s._v("MongoDB 的做法也不是完美的。比如在存储用户信息的时候，用户名和密码分别用 username 和 password 字段表示。 关系型数据库只需要把字段名作为表结构的一部分保存起来就可以了，而 MongoDB 需要将这两个字段名存储多次，每一条记录都会存储一次字段名，在一些原本就比较碎片化的字段上，用于存储字段名所耗费的空间甚至会超过存储数值的空间，比较好的解决办法是采用尽可能短的字段名，不过这又涉及到了可读性的问题，需要大家在二者之间进行权衡。")]),s._v(" "),n("h3",{attrs:{id:"_2-5-元数据"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-5-元数据"}},[s._v("#")]),s._v(" 2.5 元数据")]),s._v(" "),n("p",[s._v("数据库的信息存储在集合中，他们统一使用系统的命名空间："),n("code",[s._v("DBNAME.system.*")]),s._v("。")]),s._v(" "),n("p",[s._v("DBNAME 可用 db 或数据库名替代：")]),s._v(" "),n("ul",[n("li",[s._v("DBNAME.system.namespaces ：列出所有名字空间")]),s._v(" "),n("li",[s._v("DBNAME.system.indexs ：列出所有索引")]),s._v(" "),n("li",[s._v("DBNAME.system.profile ：列出数据库概要信息")]),s._v(" "),n("li",[s._v("DBNAME.system.users ：列出访问数据库的用户")]),s._v(" "),n("li",[s._v("DBNAME.system.sources ：列出服务器信息")])]),s._v(" "),n("h2",{attrs:{id:"_3-安装"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-安装"}},[s._v("#")]),s._v(" 3 安装")]),s._v(" "),n("p",[n("a",{attrs:{href:"https://www.mongodb.com/docs/manual/tutorial/install-mongodb-on-ubuntu/",target:"_blank",rel:"noopener noreferrer"}},[s._v("教程"),n("OutboundLink")],1)]),s._v(" "),n("p",[s._v("MongoDB 数据库在 2007 年 10 月由 10gen 团队所创建，在 2009 年 2 月首度推出。其中 10gen 是专门创建和维护 MongoDB 数据库的著名团队。")]),s._v(" "),n("p",[s._v("截止 2020 年 2 月，最新的版本是 MongoDB4.2 ，可以根据自己所使用的操作系统在官网上安装最新版本。官方下载地址：https://docs.mongodb.com/manual/administration/install-community/ 。")]),s._v(" "),n("p",[n("img",{attrs:{src:t(428),alt:"img"}})]),s._v(" "),n("p",[s._v("在我们的实验环境中已经安装了比较领先的 MongoDB4.0 版本，无需升级即可学习本课程。")]),s._v(" "),n("p",[s._v("打开实验环境，在终端命令行执行 "),n("code",[s._v("which mongo")]),s._v(" 命令可以找到它的可执行文件的绝对路径，这也证明了实验环境中已经安装 MongoDB ：")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("shiyanlou:project/ $ "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v("\nshiyanlou:~/ $ "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("which")]),s._v(" mongo\n/usr/bin/mongo\nshiyanlou:~/ $\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br")])]),n("p",[s._v("执行 "),n("code",[s._v("mongo --version")]),s._v(" 命令查看版本：")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("shiyanlou:~/ $ mongo --version\nMongoDB shell version v4.0.12\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" version: 5776e3cbf9e7afe86e6b29e22520ffb6766e95d4\nOpenSSL version: OpenSSL "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1.0")]),s._v(".2g  "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" Mar "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2016")]),s._v("\nallocator: tcmalloc\nmodules: none\nbuild environment:\n    distmod: ubuntu1604\n    distarch: x86_64\n    target_arch: x86_64\nshiyanlou:~/ $\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br")])]),n("h2",{attrs:{id:"_4-数据库的创建和销毁"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-数据库的创建和销毁"}},[s._v("#")]),s._v(" 4 数据库的创建和销毁")]),s._v(" "),n("h3",{attrs:{id:"_4-1-创建数据库"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-创建数据库"}},[s._v("#")]),s._v(" 4.1 创建数据库")]),s._v(" "),n("p",[s._v("启动服务后，进入 MongoDB 命令行操作界面：")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("mongo\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("使用 use 命令创建数据库：")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("use mydb\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("查看当前连接的数据库：")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("db\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("查看所有的数据库：")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("show dbs\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("列出的所有数据库中看不到 mydb 或者显示 mydb(empty) ，因为 mydb 为空，里面没有任何东西，MongoDB 不显示或显示 mydb(empty)。")]),s._v(" "),n("h3",{attrs:{id:"_4-2-销毁数据库"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-销毁数据库"}},[s._v("#")]),s._v(" 4.2 销毁数据库")]),s._v(" "),n("p",[s._v("使用 db.dropDatabase() 销毁数据库：")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" use "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("local")]),s._v("\nswitched to db "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("local")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" db.dropDatabase"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("p",[s._v("查看所有的数据库：")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" show dbs\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("可以发现 local 数据库已经被删除了。")]),s._v(" "),n("h2",{attrs:{id:"_5-集合的创建和删除"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_5-集合的创建和删除"}},[s._v("#")]),s._v(" 5 集合的创建和删除")]),s._v(" "),n("h3",{attrs:{id:"_5-1-创建集合"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-创建集合"}},[s._v("#")]),s._v(" 5.1 创建集合")]),s._v(" "),n("p",[s._v("在数据库 mydb 中创建一个集合")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" use mydb\nswitched to db mydb\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" db.createCollection"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"users"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("p",[s._v("查看创建的集合：")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" show collections\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("h3",{attrs:{id:"_5-2-删除集合"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-删除集合"}},[s._v("#")]),s._v(" 5.2 删除集合")]),s._v(" "),n("p",[s._v("删除集合的方法如下：（删除 users 集合）")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" show collections\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" db.users.drop"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("p",[s._v("查看是否删除成功：")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" show collections\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("h2",{attrs:{id:"_6-向集合中插入数据"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_6-向集合中插入数据"}},[s._v("#")]),s._v(" 6 向集合中插入数据")]),s._v(" "),n("h3",{attrs:{id:"_6-1-使用-insert"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_6-1-使用-insert"}},[s._v("#")]),s._v(" 6.1 使用 insert()")]),s._v(" "),n("p",[s._v("插入数据时，如果 users 集合没有创建会自动创建。")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" use mydb\nswitched to db mydb\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" db.users.insert"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(". "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" name "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"jam"')]),s._v(",\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(". email "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"jam@qq.com"')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(". "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(",\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(". "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" name "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"tom"')]),s._v(",\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(". email "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"tom@qq.com"')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(". "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(". "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br")])]),n("h3",{attrs:{id:"_6-2-使用-save"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_6-2-使用-save"}},[s._v("#")]),s._v(" 6.2 使用 save()")]),s._v(" "),n("p",[s._v("插入数据时，如果 users 集合没有创建会自动创建。")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" use mydb2\nswitched to db mydb2\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" db.users.save"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(". "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" name "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"jam"')]),s._v(",\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(". email "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"jam@qq.com"')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(". "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(",\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(". "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" name "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"tom"')]),s._v(",\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(". email "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"tom@qq.com"')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(". "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(". "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br")])]),n("p",[s._v("insert 和 save 的区别：为了方便记忆，可以先从字面上进行理解，insert 是插入，侧重于新增一个记录的含义；save 是保存，可以保存一个新的记录，也可以保存对一个记录的修改。因此，insert 不能插入一条已经存在的记录，如果已经有了一条记录(以主键为准)，insert 操作会报错，而使用 save 指令则会更新原记录。")])])}),[],!1,null,null,null);a.default=e.exports},428:function(s,a,t){s.exports=t.p+"assets/img/d9b6f4554ead74cebd62effb6a671a52.7946d9a9.png"}}]);