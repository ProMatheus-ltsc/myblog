(window.webpackJsonp=window.webpackJsonp||[]).push([[252],{1575:function(e,t,a){"use strict";a.r(t);var r=a(65),o=Object(r.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"effective-java目录"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#effective-java目录"}},[e._v("#")]),e._v(" Effective-Java目录")]),e._v(" "),a("h2",{attrs:{id:"目录-contents"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#目录-contents"}},[e._v("#")]),e._v(" 目录（Contents）")]),e._v(" "),a("ul",[a("li",[a("strong",[e._v("Chapter 2. Creating and Destroying Objects（创建和销毁对象）")]),e._v(" "),a("ul",[a("li",[a("RouterLink",{attrs:{to:"/md/develop/code-style/effective-java/Chapter-2/Chapter-2-Introduction.html"}},[e._v("Chapter 2 Introduction（章节介绍）")])],1),e._v(" "),a("li",[a("RouterLink",{attrs:{to:"/md/develop/code-style/effective-java/Chapter-2/Chapter-2-Item-1-Consider-static-factory-methods-instead-of-constructors.html"}},[e._v("Item 1: Consider static factory methods instead of constructors（考虑以静态工厂方法代替构造函数）")])],1),e._v(" "),a("li",[a("RouterLink",{attrs:{to:"/md/develop/code-style/effective-java/Chapter-2/Chapter-2-Item-2-Consider-a-builder-when-faced-with-many-constructor-parameters.html"}},[e._v("Item 2: Consider a builder when faced with many constructor parameters（在面对多个构造函数参数时，请考虑构建器）")])],1),e._v(" "),a("li",[a("RouterLink",{attrs:{to:"/md/develop/code-style/effective-java/Chapter-2/Chapter-2-Item-3-Enforce-the-singleton-property-with-a-private-constructor-or-an-enum-type.html"}},[e._v("Item 3: Enforce the singleton property with a private constructor or an enum type（使用私有构造函数或枚举类型实施单例属性）")])],1),e._v(" "),a("li",[a("RouterLink",{attrs:{to:"/md/develop/code-style/effective-java/Chapter-2/Chapter-2-Item-4-Enforce-noninstantiability-with-a-private-constructor.html"}},[e._v("Item 4: Enforce noninstantiability with a private constructor（用私有构造函数实施不可实例化）")])],1),e._v(" "),a("li",[a("RouterLink",{attrs:{to:"/md/develop/code-style/effective-java/Chapter-2/Chapter-2-Item-5-Prefer-dependency-injection-to-hardwiring-resources.html"}},[e._v("Item 5: Prefer dependency injection to hardwiring resources（依赖注入优于硬连接资源）")])],1),e._v(" "),a("li",[a("RouterLink",{attrs:{to:"/md/develop/code-style/effective-java/Chapter-2/Chapter-2-Item-6-Avoid-creating-unnecessary-objects.html"}},[e._v("Item 6: Avoid creating unnecessary objects（避免创建不必要的对象）")])],1),e._v(" "),a("li",[a("RouterLink",{attrs:{to:"/md/develop/code-style/effective-java/Chapter-2/Chapter-2-Item-7-Eliminate-obsolete-object-references.html"}},[e._v("Item 7: Eliminate obsolete object references（排除过时的对象引用）")])],1),e._v(" "),a("li",[a("RouterLink",{attrs:{to:"/md/develop/code-style/effective-java/Chapter-2/Chapter-2-Item-8-Avoid-finalizers-and-cleaners.html"}},[e._v("Item 8: Avoid finalizers and cleaners（避免使用终结器和清除器）")])],1),e._v(" "),a("li",[a("RouterLink",{attrs:{to:"/md/develop/code-style/effective-java/Chapter-2/Chapter-2-Item-9-Prefer-try-with-resources-to-try-finally.html"}},[e._v("Item 9: Prefer try with resources to try finally（使用 try-with-resources 优于 try-finally）")])],1)])]),e._v(" "),a("li",[a("strong",[e._v("Chapter 3. Methods Common to All Objects（对象的通用方法）")]),e._v(" "),a("ul",[a("li",[a("RouterLink",{attrs:{to:"/md/develop/code-style/effective-java/Chapter-3/Chapter-3-Introduction.html"}},[e._v("Chapter 3 Introduction（章节介绍）")])],1),e._v(" "),a("li",[a("RouterLink",{attrs:{to:"/md/develop/code-style/effective-java/Chapter-3/Chapter-3-Item-10-Obey-the-general-contract-when-overriding-equals.html"}},[e._v("Item 10: Obey the general contract when overriding equals（覆盖 equals 方法时应遵守的约定）")])],1),e._v(" "),a("li",[a("RouterLink",{attrs:{to:"/md/develop/code-style/effective-java/Chapter-3/Chapter-3-Item-11-Always-override-hashCode-when-you-override-equals.html"}},[e._v("Item 11: Always override hashCode when you override equals（当覆盖 equals 方法时，总要覆盖 hashCode 方法）")])],1),e._v(" "),a("li",[a("RouterLink",{attrs:{to:"/md/develop/code-style/effective-java/Chapter-3/Chapter-3-Item-12-Always-override-toString.html"}},[e._v("Item 12: Always override toString（始终覆盖 toString 方法）")])],1),e._v(" "),a("li",[a("RouterLink",{attrs:{to:"/md/develop/code-style/effective-java/Chapter-3/Chapter-3-Item-13-Override-clone-judiciously.html"}},[e._v("Item 13: Override clone judiciously（明智地覆盖 clone 方法）")])],1),e._v(" "),a("li",[a("RouterLink",{attrs:{to:"/md/develop/code-style/effective-java/Chapter-3/Chapter-3-Item-14-Consider-implementing-Comparable.html"}},[e._v("Item 14: Consider implementing Comparable（考虑实现 Comparable 接口）")])],1)])]),e._v(" "),a("li",[a("strong",[e._v("Chapter 4. Classes and Interfaces（类和接口）")]),e._v(" "),a("ul",[a("li",[a("RouterLink",{attrs:{to:"/md/develop/code-style/effective-java/Chapter-4/Chapter-4-Introduction.html"}},[e._v("Chapter 4 Introduction（章节介绍）")])],1),e._v(" "),a("li",[a("RouterLink",{attrs:{to:"/md/develop/code-style/effective-java/Chapter-4/Chapter-4-Item-15-Minimize-the-accessibility-of-classes-and-members.html"}},[e._v("Item 15: Minimize the accessibility of classes and members（尽量减少类和成员的可访问性）")])],1),e._v(" "),a("li",[a("RouterLink",{attrs:{to:"/md/develop/code-style/effective-java/Chapter-4/Chapter-4-Item-16-In-public-classes-use-accessor-methods-not-public-fields.html"}},[e._v("Item 16: In public classes use accessor methods not public fields（在公共类中，使用访问器方法，而不是公共字段）")])],1),e._v(" "),a("li",[a("RouterLink",{attrs:{to:"/md/develop/code-style/effective-java/Chapter-4/Chapter-4-Item-17-Minimize-mutability.html"}},[e._v("Item 17: Minimize mutability（减少可变性）")])],1),e._v(" "),a("li",[a("RouterLink",{attrs:{to:"/md/develop/code-style/effective-java/Chapter-4/Chapter-4-Item-18-Favor-composition-over-inheritance.html"}},[e._v("Item 18: Favor composition over inheritance（优先选择复合而不是继承）")])],1),e._v(" "),a("li",[a("RouterLink",{attrs:{to:"/md/develop/code-style/effective-java/Chapter-4/Chapter-4-Item-19-Design-and-document-for-inheritance-or-else-prohibit-it.html"}},[e._v("Item 19: Design and document for inheritance or else prohibit it（继承要设计良好并且具有文档，否则禁止使用）")])],1),e._v(" "),a("li",[a("RouterLink",{attrs:{to:"/md/develop/code-style/effective-java/Chapter-4/Chapter-4-Item-20-Prefer-interfaces-to-abstract-classes.html"}},[e._v("Item 20: Prefer interfaces to abstract classes（接口优于抽象类）")])],1),e._v(" "),a("li",[a("RouterLink",{attrs:{to:"/md/develop/code-style/effective-java/Chapter-4/Chapter-4-Item-21-Design-interfaces-for-posterity.html"}},[e._v("Item 21: Design interfaces for posterity（为后代设计接口）")])],1),e._v(" "),a("li",[a("RouterLink",{attrs:{to:"/md/develop/code-style/effective-java/Chapter-4/Chapter-4-Item-22-Use-interfaces-only-to-define-types.html"}},[e._v("Item 22: Use interfaces only to define types（接口只用于定义类型）")])],1),e._v(" "),a("li",[a("RouterLink",{attrs:{to:"/md/develop/code-style/effective-java/Chapter-4/Chapter-4-Item-23-Prefer-class-hierarchies-to-tagged-classes.html"}},[e._v("Item 23: Prefer class hierarchies to tagged classes（类层次结构优于带标签的类）")])],1),e._v(" "),a("li",[a("RouterLink",{attrs:{to:"/md/develop/code-style/effective-java/Chapter-4/Chapter-4-Item-24-Favor-static-member-classes-over-nonstatic.html"}},[e._v("Item 24: Favor static member classes over nonstatic（静态成员类优于非静态成员类）")])],1),e._v(" "),a("li",[a("RouterLink",{attrs:{to:"/md/develop/code-style/effective-java/Chapter-4/Chapter-4-Item-25-Limit-source-files-to-a-single-top-level-class.html"}},[e._v("Item 25: Limit source files to a single top level class（源文件仅限有单个顶层类）")])],1)])]),e._v(" "),a("li",[a("strong",[e._v("Chapter 5. Generics（泛型）")]),e._v(" "),a("ul",[a("li",[a("RouterLink",{attrs:{to:"/md/develop/code-style/effective-java/Chapter-5/Chapter-5-Introduction.html"}},[e._v("Chapter 5 Introduction（章节介绍）")])],1),e._v(" "),a("li",[a("RouterLink",{attrs:{to:"/md/develop/code-style/effective-java/Chapter-5/Chapter-5-Item-26-Do-not-use-raw-types.html"}},[e._v("Item 26: Do not use raw types（不要使用原始类型）")])],1),e._v(" "),a("li",[a("RouterLink",{attrs:{to:"/md/develop/code-style/effective-java/Chapter-5/Chapter-5-Item-27-Eliminate-unchecked-warnings.html"}},[e._v("Item 27: Eliminate unchecked warnings（消除 unchecked 警告）")])],1),e._v(" "),a("li",[a("RouterLink",{attrs:{to:"/md/develop/code-style/effective-java/Chapter-5/Chapter-5-Item-28-Prefer-lists-to-arrays.html"}},[e._v("Item 28: Prefer lists to arrays（list 优于数组）")])],1),e._v(" "),a("li",[a("RouterLink",{attrs:{to:"/md/develop/code-style/effective-java/Chapter-5/Chapter-5-Item-29-Favor-generic-types.html"}},[e._v("Item 29: Favor generic types（优先使用泛型）")])],1),e._v(" "),a("li",[a("RouterLink",{attrs:{to:"/md/develop/code-style/effective-java/Chapter-5/Chapter-5-Item-30-Favor-generic-methods.html"}},[e._v("Item 30: Favor generic methods（优先使用泛型方法）")])],1),e._v(" "),a("li",[a("RouterLink",{attrs:{to:"/md/develop/code-style/effective-java/Chapter-5/Chapter-5-Item-31-Use-bounded-wildcards-to-increase-API-flexibility.html"}},[e._v("Item 31: Use bounded wildcards to increase API flexibility（使用有界通配符增加 API 的灵活性）")])],1),e._v(" "),a("li",[a("RouterLink",{attrs:{to:"/md/develop/code-style/effective-java/Chapter-5/Chapter-5-Item-32-Combine-generics-and-varargs-judiciously.html"}},[e._v("Item 32: Combine generics and varargs judiciously（明智地合用泛型和可变参数）")])],1),e._v(" "),a("li",[a("RouterLink",{attrs:{to:"/md/develop/code-style/effective-java/Chapter-5/Chapter-5-Item-33-Consider-typesafe-heterogeneous-containers.html"}},[e._v("Item 33: Consider typesafe heterogeneous containers（考虑类型安全的异构容器）")])],1)])]),e._v(" "),a("li",[a("strong",[e._v("Chapter 6. Enums and Annotations（枚举和注解）")]),e._v(" "),a("ul",[a("li",[a("RouterLink",{attrs:{to:"/md/develop/code-style/effective-java/Chapter-6/Chapter-6-Introduction.html"}},[e._v("Chapter 6 Introduction（章节介绍）")])],1),e._v(" "),a("li",[a("RouterLink",{attrs:{to:"/md/develop/code-style/effective-java/Chapter-6/Chapter-6-Item-34-Use-enums-instead-of-int-constants.html"}},[e._v("Item 34: Use enums instead of int constants（用枚举类型代替 int 常量）")])],1),e._v(" "),a("li",[a("RouterLink",{attrs:{to:"/md/develop/code-style/effective-java/Chapter-6/Chapter-6-Item-35-Use-instance-fields-instead-of-ordinals.html"}},[e._v("Item 35: Use instance fields instead of ordinals（使用实例字段替代序数）")])],1),e._v(" "),a("li",[a("RouterLink",{attrs:{to:"/md/develop/code-style/effective-java/Chapter-6/Chapter-6-Item-36-Use-EnumSet-instead-of-bit-fields.html"}},[e._v("Item 36: Use EnumSet instead of bit fields（用 EnumSet 替代位字段）")])],1),e._v(" "),a("li",[a("RouterLink",{attrs:{to:"/md/develop/code-style/effective-java/Chapter-6/Chapter-6-Item-37-Use-EnumMap-instead-of-ordinal-indexing.html"}},[e._v("Item 37: Use EnumMap instead of ordinal indexing（使用 EnumMap 替换序数索引）")])],1),e._v(" "),a("li",[a("RouterLink",{attrs:{to:"/md/develop/code-style/effective-java/Chapter-6/Chapter-6-Item-38-Emulate-extensible-enums-with-interfaces.html"}},[e._v("Item 38: Emulate extensible enums with interfaces（使用接口模拟可扩展枚举）")])],1),e._v(" "),a("li",[a("RouterLink",{attrs:{to:"/md/develop/code-style/effective-java/Chapter-6/Chapter-6-Item-39-Prefer-annotations-to-naming-patterns.html"}},[e._v("Item 39: Prefer annotations to naming patterns（注解优于命名模式）")])],1),e._v(" "),a("li",[a("RouterLink",{attrs:{to:"/md/develop/code-style/effective-java/Chapter-6/Chapter-6-Item-40-Consistently-use-the-Override-annotation.html"}},[e._v("Item 40: Consistently use the Override annotation（坚持使用 @Override 注解）")])],1),e._v(" "),a("li",[a("RouterLink",{attrs:{to:"/md/develop/code-style/effective-java/Chapter-6/Chapter-6-Item-41-Use-marker-interfaces-to-define-types.html"}},[e._v("Item 41: Use marker interfaces to define types（使用标记接口定义类型）")])],1)])]),e._v(" "),a("li",[a("strong",[e._v("Chapter 7. Lambdas and Streams（λ 表达式和流）")]),e._v(" "),a("ul",[a("li",[a("RouterLink",{attrs:{to:"/md/develop/code-style/effective-java/Chapter-7/Chapter-7-Introduction.html"}},[e._v("Chapter 7 Introduction（章节介绍）")])],1),e._v(" "),a("li",[a("RouterLink",{attrs:{to:"/md/develop/code-style/effective-java/Chapter-7/Chapter-7-Item-42-Prefer-lambdas-to-anonymous-classes.html"}},[e._v("Item 42: Prefer lambdas to anonymous classes（λ 表达式优于匿名类）")])],1),e._v(" "),a("li",[a("RouterLink",{attrs:{to:"/md/develop/code-style/effective-java/Chapter-7/Chapter-7-Item-43-Prefer-method-references-to-lambdas.html"}},[e._v("Item 43: Prefer method references to lambdas（方法引用优于 λ 表达式）")])],1),e._v(" "),a("li",[a("RouterLink",{attrs:{to:"/md/develop/code-style/effective-java/Chapter-7/Chapter-7-Item-44-Favor-the-use-of-standard-functional-interfaces.html"}},[e._v("Item 44: Favor the use of standard functional interfaces（优先使用标准函数式接口）")])],1),e._v(" "),a("li",[a("RouterLink",{attrs:{to:"/md/develop/code-style/effective-java/Chapter-7/Chapter-7-Item-45-Use-streams-judiciously.html"}},[e._v("Item 45: Use streams judiciously（明智地使用流）")])],1),e._v(" "),a("li",[a("RouterLink",{attrs:{to:"/md/develop/code-style/effective-java/Chapter-7/Chapter-7-Item-46-Prefer-side-effect-free-functions-in-streams.html"}},[e._v("Item 46: Prefer side effect free functions in streams（在流中使用无副作用的函数）")])],1),e._v(" "),a("li",[a("RouterLink",{attrs:{to:"/md/develop/code-style/effective-java/Chapter-7/Chapter-7-Item-47-Prefer-Collection-to-Stream-as-a-return-type.html"}},[e._v("Item 47: Prefer Collection to Stream as a return type（优先选择 Collection 而不是流作为返回类型）")])],1),e._v(" "),a("li",[a("RouterLink",{attrs:{to:"/md/develop/code-style/effective-java/Chapter-7/Chapter-7-Item-48-Use-caution-when-making-streams-parallel.html"}},[e._v("Item 48: Use caution when making streams parallel（谨慎使用并行流）")])],1)])]),e._v(" "),a("li",[a("strong",[e._v("Chapter 8. Methods（方法）")]),e._v(" "),a("ul",[a("li",[a("RouterLink",{attrs:{to:"/md/develop/code-style/effective-java/Chapter-8/Chapter-8-Introduction.html"}},[e._v("Chapter 8 Introduction（章节介绍）")])],1),e._v(" "),a("li",[a("RouterLink",{attrs:{to:"/md/develop/code-style/effective-java/Chapter-8/Chapter-8-Item-49-Check-parameters-for-validity.html"}},[e._v("Item 49: Check parameters for validity（检查参数的有效性）")])],1),e._v(" "),a("li",[a("RouterLink",{attrs:{to:"/md/develop/code-style/effective-java/Chapter-8/Chapter-8-Item-50-Make-defensive-copies-when-needed.html"}},[e._v("Item 50: Make defensive copies when needed（在需要时制作防御性副本）")])],1),e._v(" "),a("li",[a("RouterLink",{attrs:{to:"/md/develop/code-style/effective-java/Chapter-8/Chapter-8-Item-51-Design-method-signatures-carefully.html"}},[e._v("Item 51: Design method signatures carefully（仔细设计方法签名）")])],1),e._v(" "),a("li",[a("RouterLink",{attrs:{to:"/md/develop/code-style/effective-java/Chapter-8/Chapter-8-Item-52-Use-overloading-judiciously.html"}},[e._v("Item 52: Use overloading judiciously（明智地使用重载）")])],1),e._v(" "),a("li",[a("RouterLink",{attrs:{to:"/md/develop/code-style/effective-java/Chapter-8/Chapter-8-Item-53-Use-varargs-judiciously.html"}},[e._v("Item 53: Use varargs judiciously（明智地使用可变参数）")])],1),e._v(" "),a("li",[a("RouterLink",{attrs:{to:"/md/develop/code-style/effective-java/Chapter-8/Chapter-8-Item-54-Return-empty-collections-or-arrays-not-nulls.html"}},[e._v("Item 54: Return empty collections or arrays, not nulls（返回空集合或数组，而不是 null）")])],1),e._v(" "),a("li",[a("RouterLink",{attrs:{to:"/md/develop/code-style/effective-java/Chapter-8/Chapter-8-Item-55-Return-optionals-judiciously.html"}},[e._v("Item 55: Return optionals judiciously（明智地的返回 Optional）")])],1),e._v(" "),a("li",[a("RouterLink",{attrs:{to:"/md/develop/code-style/effective-java/Chapter-8/Chapter-8-Item-56-Write-doc-comments-for-all-exposed-API-elements.html"}},[e._v("Item 56: Write doc comments for all exposed API elements（为所有公开的 API 元素编写文档注释）")])],1)])]),e._v(" "),a("li",[a("strong",[e._v("Chapter 9. General Programming（通用程序设计）")]),e._v(" "),a("ul",[a("li",[a("RouterLink",{attrs:{to:"/md/develop/code-style/effective-java/Chapter-9/Chapter-9-Introduction.html"}},[e._v("Chapter 9 Introduction（章节介绍）")])],1),e._v(" "),a("li",[a("RouterLink",{attrs:{to:"/md/develop/code-style/effective-java/Chapter-9/Chapter-9-Item-57-Minimize-the-scope-of-local-variables.html"}},[e._v("Item 57: Minimize the scope of local variables（将局部变量的作用域最小化）")])],1),e._v(" "),a("li",[a("RouterLink",{attrs:{to:"/md/develop/code-style/effective-java/Chapter-9/Chapter-9-Item-58-Prefer-for-each-loops-to-traditional-for-loops.html"}},[e._v("Item 58: Prefer for-each loops to traditional for loops（for-each 循环优于传统的 for 循环）")])],1),e._v(" "),a("li",[a("RouterLink",{attrs:{to:"/md/develop/code-style/effective-java/Chapter-9/Chapter-9-Item-59-Know-and-use-the-libraries.html"}},[e._v("Item 59: Know and use the libraries（了解并使用库）")])],1),e._v(" "),a("li",[a("RouterLink",{attrs:{to:"/md/develop/code-style/effective-java/Chapter-9/Chapter-9-Item-60-Avoid-float-and-double-if-exact-answers-are-required.html"}},[e._v("Item 60: Avoid float and double if exact answers are required（若需要精确答案就应避免使用 float 和 double 类型）")])],1),e._v(" "),a("li",[a("RouterLink",{attrs:{to:"/md/develop/code-style/effective-java/Chapter-9/Chapter-9-Item-61-Prefer-primitive-types-to-boxed-primitives.html"}},[e._v("Item 61: Prefer primitive types to boxed primitives（基本数据类型优于包装类）")])],1),e._v(" "),a("li",[a("RouterLink",{attrs:{to:"/md/develop/code-style/effective-java/Chapter-9/Chapter-9-Item-62-Avoid-strings-where-other-types-are-more-appropriate.html"}},[e._v("Item 62: Avoid strings where other types are more appropriate（其他类型更合适时应避免使用字符串）")])],1),e._v(" "),a("li",[a("RouterLink",{attrs:{to:"/md/develop/code-style/effective-java/Chapter-9/Chapter-9-Item-63-Beware-the-performance-of-string-concatenation.html"}},[e._v("Item 63: Beware the performance of string concatenation（当心字符串连接引起的性能问题）")])],1),e._v(" "),a("li",[a("RouterLink",{attrs:{to:"/md/develop/code-style/effective-java/Chapter-9/Chapter-9-Item-64-Refer-to-objects-by-their-interfaces.html"}},[e._v("Item 64: Refer to objects by their interfaces（通过接口引用对象）")])],1),e._v(" "),a("li",[a("RouterLink",{attrs:{to:"/md/develop/code-style/effective-java/Chapter-9/Chapter-9-Item-65-Prefer-interfaces-to-reflection.html"}},[e._v("Item 65: Prefer interfaces to reflection（接口优于反射）")])],1),e._v(" "),a("li",[a("RouterLink",{attrs:{to:"/md/develop/code-style/effective-java/Chapter-9/Chapter-9-Item-66-Use-native-methods-judiciously.html"}},[e._v("Item 66: Use native methods judiciously（明智地使用本地方法）")])],1),e._v(" "),a("li",[a("RouterLink",{attrs:{to:"/md/develop/code-style/effective-java/Chapter-9/Chapter-9-Item-67-Optimize-judiciously.html"}},[e._v("Item 67: Optimize judiciously（明智地进行优化）")])],1),e._v(" "),a("li",[a("RouterLink",{attrs:{to:"/md/develop/code-style/effective-java/Chapter-9/Chapter-9-Item-68-Adhere-to-generally-accepted-naming-conventions.html"}},[e._v("Item 68: Adhere to generally accepted naming conventions（遵守被广泛认可的命名约定）")])],1)])]),e._v(" "),a("li",[a("strong",[e._v("Chapter 10. Exceptions（异常）")]),e._v(" "),a("ul",[a("li",[a("RouterLink",{attrs:{to:"/md/develop/code-style/effective-java/Chapter-10/Chapter-10-Introduction.html"}},[e._v("Chapter 10 Introduction（章节介绍）")])],1),e._v(" "),a("li",[a("RouterLink",{attrs:{to:"/md/develop/code-style/effective-java/Chapter-10/Chapter-10-Item-69-Use-exceptions-only-for-exceptional-conditions.html"}},[e._v("Item 69: Use exceptions only for exceptional conditions（仅在确有异常条件下使用异常）")])],1),e._v(" "),a("li",[a("RouterLink",{attrs:{to:"/md/develop/code-style/effective-java/Chapter-10/Chapter-10-Item-70-Use-checked-exceptions-for-recoverable-conditions-and-runtime-exceptions-for-programming-errors.html"}},[e._v("Item 70: Use checked exceptions for recoverable conditions and runtime exceptions for programming errors（对可恢复情况使用 checked 异常，对编程错误使用运行时异常）")])],1),e._v(" "),a("li",[a("RouterLink",{attrs:{to:"/md/develop/code-style/effective-java/Chapter-10/Chapter-10-Item-71-Avoid-unnecessary-use-of-checked-exceptions.html"}},[e._v("Item 71: Avoid unnecessary use of checked exceptions（避免不必要地使用 checked 异常）")])],1),e._v(" "),a("li",[a("RouterLink",{attrs:{to:"/md/develop/code-style/effective-java/Chapter-10/Chapter-10-Item-72-Favor-the-use-of-standard-exceptions.html"}},[e._v("Item 72: Favor the use of standard exceptions（鼓励复用标准异常）")])],1),e._v(" "),a("li",[a("RouterLink",{attrs:{to:"/md/develop/code-style/effective-java/Chapter-10/Chapter-10-Item-73-Throw-exceptions-appropriate-to-the-abstraction.html"}},[e._v("Item 73: Throw exceptions appropriate to the abstraction（抛出能用抽象解释的异常）")])],1),e._v(" "),a("li",[a("RouterLink",{attrs:{to:"/md/develop/code-style/effective-java/Chapter-10/Chapter-10-Item-74-Document-all-exceptions-thrown-by-each-method.html"}},[e._v("Item 74: Document all exceptions thrown by each method（为每个方法记录会抛出的所有异常）")])],1),e._v(" "),a("li",[a("RouterLink",{attrs:{to:"/md/develop/code-style/effective-java/Chapter-10/Chapter-10-Item-75-Include-failure-capture-information-in-detail-messages.html"}},[e._v("Item 75: Include failure capture information in detail messages（异常详细消息中应包含捕获失败的信息）")])],1),e._v(" "),a("li",[a("RouterLink",{attrs:{to:"/md/develop/code-style/effective-java/Chapter-10/Chapter-10-Item-76-Strive-for-failure-atomicity.html"}},[e._v("Item 76: Strive for failure atomicity（尽力保证故障原子性）")])],1),e._v(" "),a("li",[a("RouterLink",{attrs:{to:"/md/develop/code-style/effective-java/Chapter-10/Chapter-10-Item-77-Don’t-ignore-exceptions.html"}},[e._v("Item 77: Don’t ignore exceptions（不要忽略异常）")])],1)])]),e._v(" "),a("li",[a("strong",[e._v("Chapter 11. Concurrency（并发）")]),e._v(" "),a("ul",[a("li",[a("RouterLink",{attrs:{to:"/md/develop/code-style/effective-java/Chapter-11/Chapter-11-Introduction.html"}},[e._v("Chapter 11 Introduction（章节介绍）")])],1),e._v(" "),a("li",[a("RouterLink",{attrs:{to:"/md/develop/code-style/effective-java/Chapter-11/Chapter-11-Item-78-Synchronize-access-to-shared-mutable-data.html"}},[e._v("Item 78: Synchronize access to shared mutable data（对共享可变数据的同步访问）")])],1),e._v(" "),a("li",[a("RouterLink",{attrs:{to:"/md/develop/code-style/effective-java/Chapter-11/Chapter-11-Item-79-Avoid-excessive-synchronization.html"}},[e._v("Item 79: Avoid excessive synchronization（避免过度同步）")])],1),e._v(" "),a("li",[a("RouterLink",{attrs:{to:"/md/develop/code-style/effective-java/Chapter-11/Chapter-11-Item-80-Prefer-executors,-tasks,-and-streams-to-threads.html"}},[e._v("Item 80: Prefer executors, tasks, and streams to threads（Executor、task、流优于直接使用线程）")])],1),e._v(" "),a("li",[a("RouterLink",{attrs:{to:"/md/develop/code-style/effective-java/Chapter-11/Chapter-11-Item-81-Prefer-concurrency-utilities-to-wait-and-notify.html"}},[e._v("Item 81: Prefer concurrency utilities to wait and notify（并发实用工具优于 wait 和 notify）")])],1),e._v(" "),a("li",[a("RouterLink",{attrs:{to:"/md/develop/code-style/effective-java/Chapter-11/Chapter-11-Item-82-Document-thread-safety.html"}},[e._v("Item 82: Document thread safety（文档应包含线程安全属性）")])],1),e._v(" "),a("li",[a("RouterLink",{attrs:{to:"/md/develop/code-style/effective-java/Chapter-11/Chapter-11-Item-83-Use-lazy-initialization-judiciously.html"}},[e._v("Item 83: Use lazy initialization judiciously（明智地使用延迟初始化）")])],1),e._v(" "),a("li",[a("RouterLink",{attrs:{to:"/md/develop/code-style/effective-java/Chapter-11/Chapter-11-Item-84-Don’t-depend-on-the-thread-scheduler.html"}},[e._v("Item 84: Don’t depend on the thread scheduler（不要依赖线程调度器）")])],1)])]),e._v(" "),a("li",[a("strong",[e._v("Chapter 12. Serialization（序列化）")]),e._v(" "),a("ul",[a("li",[a("RouterLink",{attrs:{to:"/md/develop/code-style/effective-java/Chapter-12/Chapter-12-Introduction.html"}},[e._v("Chapter 12 Introduction（章节介绍）")])],1),e._v(" "),a("li",[a("RouterLink",{attrs:{to:"/md/develop/code-style/effective-java/Chapter-12/Chapter-12-Item-85-Prefer-alternatives-to-Java-serialization.html"}},[e._v("Item 85: Prefer alternatives to Java serialization（优先选择 Java 序列化的替代方案）")])],1),e._v(" "),a("li",[a("RouterLink",{attrs:{to:"/md/develop/code-style/effective-java/Chapter-12/Chapter-12-Item-86-Implement-Serializable-with-great-caution.html"}},[e._v("Item 86: Implement Serializable with great caution（非常谨慎地实现 Serializable）")])],1),e._v(" "),a("li",[a("RouterLink",{attrs:{to:"/md/develop/code-style/effective-java/Chapter-12/Chapter-12-Item-87-Consider-using-a-custom-serialized-form.html"}},[e._v("Item 87: Consider using a custom serialized form（考虑使用自定义序列化形式）")])],1),e._v(" "),a("li",[a("RouterLink",{attrs:{to:"/md/develop/code-style/effective-java/Chapter-12/Chapter-12-Item-88-Write-readObject-methods-defensively.html"}},[e._v("Item 88: Write readObject methods defensively（防御性地编写 readObject 方法）")])],1),e._v(" "),a("li",[a("RouterLink",{attrs:{to:"/md/develop/code-style/effective-java/Chapter-12/Chapter-12-Item-89-For-instance-control-prefer-enum-types-to-readResolve.html"}},[e._v("Item 89: For instance control, prefer enum types to readResolve（对于实例控制，枚举类型优于 readResolve）")])],1),e._v(" "),a("li",[a("RouterLink",{attrs:{to:"/md/develop/code-style/effective-java/Chapter-12/Chapter-12-Item-90-Consider-serialization-proxies-instead-of-serialized-instances.html"}},[e._v("Item 90: Consider serialization proxies instead of serialized instances（考虑以序列化代理代替序列化实例）")])],1)])])])])}),[],!1,null,null,null);t.default=o.exports}}]);