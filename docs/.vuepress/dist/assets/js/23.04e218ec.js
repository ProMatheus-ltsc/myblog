(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{1604:function(s,t,a){"use strict";a.r(t);var e=a(65),v=Object(e.a)({},(function(){var s=this,t=s.$createElement,e=s._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("h1",{attrs:{id:"正则表达式"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#正则表达式"}},[s._v("#")]),s._v(" 正则表达式")]),s._v(" "),e("p"),e("div",{staticClass:"table-of-contents"},[e("ul",[e("li",[e("a",{attrs:{href:"#什么是正则表达式呢"}},[s._v("什么是正则表达式呢？")]),e("ul",[e("li",[e("a",{attrs:{href:"#举例"}},[s._v("举例")])]),e("li",[e("a",{attrs:{href:"#基本语法"}},[s._v("基本语法")])])])]),e("li",[e("a",{attrs:{href:"#grep-模式匹配命令"}},[s._v("grep 模式匹配命令")]),e("ul",[e("li",[e("a",{attrs:{href:"#基本操作"}},[s._v("基本操作")])]),e("li",[e("a",{attrs:{href:"#使用正则表达式"}},[s._v("使用正则表达式")])])])]),e("li",[e("a",{attrs:{href:"#sed-流编辑器"}},[s._v("sed 流编辑器")]),e("ul",[e("li",[e("a",{attrs:{href:"#sed-常用参数介绍"}},[s._v("sed 常用参数介绍")])]),e("li",[e("a",{attrs:{href:"#sed-编辑器的执行命令-这里-执行-解释为名词"}},[s._v("sed 编辑器的执行命令（这里”执行“解释为名词）")])]),e("li",[e("a",{attrs:{href:"#sed-操作举例"}},[s._v("sed 操作举例")])])])]),e("li",[e("a",{attrs:{href:"#awk-文本处理语言"}},[s._v("awk 文本处理语言")]),e("ul",[e("li",[e("a",{attrs:{href:"#awk-介绍"}},[s._v("awk 介绍")])]),e("li",[e("a",{attrs:{href:"#awk-的一些基础概念"}},[s._v("awk 的一些基础概念")])]),e("li",[e("a",{attrs:{href:"#awk-命令基本格式"}},[s._v("awk 命令基本格式")])]),e("li",[e("a",{attrs:{href:"#awk-操作体验"}},[s._v("awk 操作体验")])]),e("li",[e("a",{attrs:{href:"#awk-常用的内置变量"}},[s._v("awk 常用的内置变量")])])])])])]),e("p"),s._v(" "),e("h2",{attrs:{id:"什么是正则表达式呢"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#什么是正则表达式呢"}},[s._v("#")]),s._v(" 什么是正则表达式呢？")]),s._v(" "),e("blockquote",[e("p",[e("strong",[s._v("正则表达式")]),s._v("，又称正规表示式、正规表示法、正规表达式、规则表达式、常规表示法（英语：Regular Expression，在代码中常简写为 regex、regexp 或 RE），计算机科学的一个概念。正则表达式使用单个字符串来描述、匹配一系列符合某个句法规则的字符串。在很多文本编辑器里，正则表达式通常被用来检索、替换那些符合某个模式的文本。")])]),s._v(" "),e("blockquote",[e("p",[s._v("许多程序设计语言都支持利用正则表达式进行字符串操作。例如，在 Perl 中就内建了一个功能强大的正则表达式引擎。正则表达式这个概念最初是由 UNIX 中的工具软件（例如"),e("code",[s._v("sed")]),s._v("和"),e("code",[s._v("grep")]),s._v("）普及开的。正则表达式通常缩写成“regex”，单数有 regexp、regex，复数有 regexps、regexes、regexen。")])]),s._v(" "),e("p",[s._v("简单的说形式和功能上正则表达式和我们前面讲的通配符很像，不过它们之间又有很大差别，特别在于一些特殊的匹配字符的含义上，希望初学者注意不要将两者弄混淆。")]),s._v(" "),e("h3",{attrs:{id:"举例"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#举例"}},[s._v("#")]),s._v(" 举例")]),s._v(" "),e("p",[s._v("假设我们有这样一个文本文件，包含 "),e("code",[s._v("shiyanlou")]),s._v(" 和 "),e("code",[s._v("shilouyan")]),s._v(" 这两个字符串，同样一个表达式：")]),s._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[s._v("shi*\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[s._v("如果这作为一个正则表达式，它将只能匹配 shi，而如果不是作为正则表达式 "),e("code",[s._v("*")]),s._v(" 作为一个通配符，则将同时匹配这两个字符串。这是为什么呢？因为在正则表达式中 "),e("code",[s._v("*")]),s._v(" 表示匹配前面的子表达式（这里就是它前面一个字符）零次或多次，比如它可以匹配 "),e("code",[s._v("sh")]),s._v("，"),e("code",[s._v("shii")]),s._v("，"),e("code",[s._v("shish")]),s._v("，"),e("code",[s._v("shiishi")]),s._v(" 等等，而作为通配符表示匹配通配符后面任意多个任意字符，所以它可以匹配 "),e("code",[s._v("shiyanlou")]),s._v(" 和 "),e("code",[s._v("shilouyan")]),s._v(" 两个字符。")]),s._v(" "),e("p",[s._v("体验完了，下面就来开始正式学习正则表达式吧。")]),s._v(" "),e("h3",{attrs:{id:"基本语法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#基本语法"}},[s._v("#")]),s._v(" 基本语法")]),s._v(" "),e("p",[s._v("一个正则表达式通常被称为一个模式（"),e("strong",[s._v("pattern")]),s._v("），为用来描述或者匹配一系列符合某个句法规则的字符串。")]),s._v(" "),e("h4",{attrs:{id:"选择"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#选择"}},[s._v("#")]),s._v(" 选择")]),s._v(" "),e("p",[e("code",[s._v("|")]),s._v(" 竖直分隔符表示选择，例如 "),e("code",[s._v("boy|girl")]),s._v(" 可以匹配 "),e("code",[s._v("boy")]),s._v(" 或者 "),e("code",[s._v("girl")]),s._v("。")]),s._v(" "),e("h4",{attrs:{id:"数量限定"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#数量限定"}},[s._v("#")]),s._v(" 数量限定")]),s._v(" "),e("p",[s._v("数量限定除了我们举例用的 "),e("code",[s._v("*")]),s._v(" 还有 "),e("code",[s._v("+")]),s._v(" 加号 "),e("code",[s._v("?")]),s._v(" 问号，如果在一个模式中不加数量限定符则表示出现一次且仅出现一次：")]),s._v(" "),e("ul",[e("li",[e("code",[s._v("+")]),s._v(" 表示前面的字符必须出现至少一次(1 次或多次)，例如 "),e("code",[s._v("goo+gle")]),s._v(" 可以匹配 "),e("code",[s._v("gooogle")]),s._v("，"),e("code",[s._v("goooogle")]),s._v(" 等；")]),s._v(" "),e("li",[e("code",[s._v("?")]),s._v(" 表示前面的字符最多出现一次（0 次或 1 次），例如，"),e("code",[s._v("colou?r")]),s._v("，可以匹配 "),e("code",[s._v("color")]),s._v(" 或者 "),e("code",[s._v("colour")]),s._v(";")]),s._v(" "),e("li",[e("code",[s._v("*")]),s._v(" 星号代表前面的字符可以不出现，也可以出现一次或者多次（0 次、或 1 次、或多次），例如，"),e("code",[s._v("0*42")]),s._v(" 可以匹配 42、042、0042、00042 等。")])]),s._v(" "),e("h4",{attrs:{id:"范围和优先级"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#范围和优先级"}},[s._v("#")]),s._v(" 范围和优先级")]),s._v(" "),e("p",[e("code",[s._v("()")]),s._v(" 圆括号可以用来定义模式字符串的范围和优先级，这可以简单的理解为是否将括号内的模式串作为一个整体。例如，"),e("code",[s._v("gr(a|e)y")]),s._v(" 等价于 "),e("code",[s._v("gray|grey")]),s._v("，（这里体现了优先级，竖直分隔符用于选择 "),e("code",[s._v("a")]),s._v(" 或者 "),e("code",[s._v("e")]),s._v(" 而不是 "),e("code",[s._v("gra")]),s._v(" 和 "),e("code",[s._v("ey")]),s._v("），"),e("code",[s._v("(grand)?father")]),s._v(" 匹配 "),e("code",[s._v("father")]),s._v(" 和 "),e("code",[s._v("grandfather")]),s._v("（这里体现了范围，"),e("code",[s._v("?")]),s._v(" 将圆括号内容作为一个整体匹配）。")]),s._v(" "),e("h4",{attrs:{id:"语法-部分"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#语法-部分"}},[s._v("#")]),s._v(" 语法（部分）")]),s._v(" "),e("p",[s._v("正则表达式有多种不同的风格，下面列举一些常用的作为 PCRE 子集的适用于 "),e("code",[s._v("perl")]),s._v(" 和 "),e("code",[s._v("python")]),s._v(" 编程语言及 "),e("code",[s._v("grep")]),s._v(" 或 "),e("code",[s._v("egrep")]),s._v(" 的正则表达式匹配规则：")]),s._v(" "),e("blockquote",[e("p",[s._v("PCRE（Perl Compatible Regular Expressions 中文含义：perl 语言兼容正则表达式）是一个用 C 语言编写的正则表达式函数库，由菲利普.海泽(Philip Hazel)编写。PCRE 是一个轻量级的函数库，比 Boost 之类的正则表达式库小得多。PCRE 十分易用，同时功能也很强大，性能超过了 POSIX 正则表达式库和一些经典的正则表达式库。")])]),s._v(" "),e("p",[e("strong",[s._v("(由于 markdown 表格解析的问题，下面的竖直分隔符 "),e("code",[s._v("|")]),s._v(" 用全角字符代替，实际使用时请换回半角字符。")])]),s._v(" "),e("table",[e("thead",[e("tr",[e("th",[s._v("字符")]),s._v(" "),e("th",[s._v("描述")])])]),s._v(" "),e("tbody",[e("tr",[e("td",[e("code",[s._v("\\")])]),s._v(" "),e("td",[e("strong",[s._v("将下一个字符标记为一个特殊字符、或一个原义字符。")]),s._v(" 例如 "),e("code",[s._v("n")]),s._v(" 匹配字符 "),e("code",[s._v("n")]),s._v("。"),e("code",[s._v("\\n")]),s._v(" 匹配一个换行符。序列 "),e("code",[s._v("\\\\")]),s._v(" 匹配 "),e("code",[s._v("\\")]),s._v(" 而 "),e("code",[s._v("\\(")]),s._v(" 则匹配 "),e("code",[s._v("(")]),s._v("。")])]),s._v(" "),e("tr",[e("td",[e("code",[s._v("^")])]),s._v(" "),e("td",[e("strong",[s._v("匹配输入字符串的开始位置。")])])]),s._v(" "),e("tr",[e("td",[e("code",[s._v("$")])]),s._v(" "),e("td",[e("strong",[s._v("匹配输入字符串的结束位置。")])])]),s._v(" "),e("tr",[e("td",[e("code",[s._v("{n}")])]),s._v(" "),e("td",[s._v("n 是一个非负整数。"),e("strong",[s._v("匹配确定的 n 次")]),s._v("。例如 "),e("code",[s._v("o{2}")]),s._v(" 不能匹配 "),e("code",[s._v("Bob")]),s._v(" 中的 "),e("code",[s._v("o")]),s._v("，但是能匹配 "),e("code",[s._v("food")]),s._v(" 中的两个 "),e("code",[s._v("o")]),s._v("。")])]),s._v(" "),e("tr",[e("td",[e("code",[s._v("{n,}")])]),s._v(" "),e("td",[s._v("n 是一个非负整数。"),e("strong",[s._v("至少匹配 n 次")]),s._v("。例如 "),e("code",[s._v("o{2,}")]),s._v(" 不能匹配 "),e("code",[s._v("Bob")]),s._v(" 中的 "),e("code",[s._v("o")]),s._v("，但能匹配 "),e("code",[s._v("foooood")]),s._v(" 中的所有 "),e("code",[s._v("o")]),s._v("。"),e("code",[s._v("o{1,}")]),s._v(" 等价于 "),e("code",[s._v("o+")]),s._v("。"),e("code",[s._v("o{0,}")]),s._v(" 则等价于 "),e("code",[s._v("o*")]),s._v("。")])]),s._v(" "),e("tr",[e("td",[e("code",[s._v("{n,m}")])]),s._v(" "),e("td",[s._v("m 和 n 均为非负整数，其中 "),e("code",[s._v("n<=m")]),s._v("。"),e("strong",[s._v("最少匹配 n 次且最多匹配 m 次")]),s._v("。例如，"),e("code",[s._v("o{1,3}")]),s._v(" 将匹配 "),e("code",[s._v("fooooood")]),s._v(" 中的前三个 "),e("code",[s._v("o")]),s._v("。"),e("code",[s._v("o{0,1}")]),s._v(" 等价于 "),e("code",[s._v("o?")]),s._v("。请注意在逗号和两个数之间不能有空格。")])]),s._v(" "),e("tr",[e("td",[e("code",[s._v("*")])]),s._v(" "),e("td",[e("strong",[s._v("匹配前面的子表达式零次或多次")]),s._v("。例如，"),e("code",[s._v("zo*")]),s._v(" 能匹配 "),e("code",[s._v("z")]),s._v("、"),e("code",[s._v("zo")]),s._v(" 以及 "),e("code",[s._v("zoo")]),s._v("。"),e("code",[s._v("*")]),s._v(" 等价于 "),e("code",[s._v("{0,}")]),s._v("。")])]),s._v(" "),e("tr",[e("td",[e("code",[s._v("+")])]),s._v(" "),e("td",[e("strong",[s._v("匹配前面的子表达式一次或多次")]),s._v("。例如，"),e("code",[s._v("zo+")]),s._v(" 能匹配 "),e("code",[s._v("zo")]),s._v(" 以及 "),e("code",[s._v("zoo")]),s._v("，但不能匹配 "),e("code",[s._v("z")]),s._v("。"),e("code",[s._v("+")]),s._v(" 等价于 "),e("code",[s._v("{1,}")]),s._v("。")])]),s._v(" "),e("tr",[e("td",[e("code",[s._v("?")])]),s._v(" "),e("td",[e("strong",[s._v("匹配前面的子表达式零次或一次")]),s._v("。例如，"),e("code",[s._v("do(es)?")]),s._v(" 可以匹配 "),e("code",[s._v("do")]),s._v(" 或 "),e("code",[s._v("does")]),s._v(" 中的 "),e("code",[s._v("do")]),s._v("。"),e("code",[s._v("?")]),s._v(" 等价于 "),e("code",[s._v("{0,1}")]),s._v("。")])]),s._v(" "),e("tr",[e("td",[e("code",[s._v("?")])]),s._v(" "),e("td",[s._v("当该字符紧跟在任何一个其他限制符（"),e("code",[s._v("*")]),s._v("，"),e("code",[s._v("+")]),s._v("，"),e("code",[s._v("?")]),s._v("，"),e("code",[s._v("{n}")]),s._v("，"),e("code",[s._v("{n,}")]),s._v("，"),e("code",[s._v("{n,m}")]),s._v("）后面时，匹配模式是非贪婪的。非贪婪模式尽可能少的匹配所搜索的字符串，而默认的贪婪模式则尽可能多的匹配所搜索的字符串。例如，对于字符串 "),e("code",[s._v("oooo")]),s._v("，"),e("code",[s._v("o+?")]),s._v(" 将匹配单个 "),e("code",[s._v("o")]),s._v("，而 "),e("code",[s._v("o+")]),s._v(" 将匹配所有 "),e("code",[s._v("o")]),s._v("。")])]),s._v(" "),e("tr",[e("td",[e("code",[s._v(".")])]),s._v(" "),e("td",[e("strong",[s._v("匹配除 "),e("code",[s._v("\\n")]),s._v(" 之外的任何单个字符")]),s._v("。要匹配包括 "),e("code",[s._v("\\n")]),s._v(" 在内的任何字符，请使用类似 "),e("code",[s._v("(.｜\\n)")]),s._v(" 的模式。")])]),s._v(" "),e("tr",[e("td",[e("code",[s._v("(pattern)")])]),s._v(" "),e("td",[e("strong",[s._v("匹配 pattern 并获取这一匹配的子字符串")]),s._v("。该子字符串用于向后引用。要匹配圆括号字符，请使用 "),e("code",[s._v("\\(")]),s._v(" 和 "),e("code",[s._v("\\)")]),s._v("。")])]),s._v(" "),e("tr",[e("td",[s._v("x ｜ y")]),s._v(" "),e("td",[e("strong",[s._v("匹配 x 或 y")]),s._v("。例如，“z ｜ food”能匹配 "),e("code",[s._v("z")]),s._v(" 或 "),e("code",[s._v("food")]),s._v("。“(z ｜ f)ood”则匹配 "),e("code",[s._v("zood")]),s._v(" 或 "),e("code",[s._v("food")]),s._v("。")])]),s._v(" "),e("tr",[e("td",[e("code",[s._v("[xyz]")])]),s._v(" "),e("td",[s._v("字符集合（character class）。"),e("strong",[s._v("匹配所包含的任意一个字符")]),s._v("。例如，"),e("code",[s._v("[abc]")]),s._v(" 可以匹配 "),e("code",[s._v("plain")]),s._v(" 中的 "),e("code",[s._v("a")]),s._v("。其中特殊字符仅有反斜线 "),e("code",[s._v("\\")]),s._v(" 保持特殊含义，用于转义字符。其它特殊字符如星号、加号、各种括号等均作为普通字符。脱字符^如果出现在首位则表示负值字符集合；如果出现在字符串中间就仅作为普通字符。"),e("strong",[s._v("连字符 "),e("code",[s._v("-")]),s._v(" 如果出现在字符串中间表示字符范围描述；如果出现在首位则仅作为普通字符。")])])]),s._v(" "),e("tr",[e("td",[e("code",[s._v("[^xyz]")])]),s._v(" "),e("td",[s._v("排除型（negate）字符集合。**匹配未列出的任意字符。**例如，"),e("code",[s._v("[^abc]")]),s._v(" 可以匹配 "),e("code",[s._v("plain")]),s._v(" 中的 "),e("code",[s._v("plin")]),s._v("。")])]),s._v(" "),e("tr",[e("td",[e("code",[s._v("[a-z]")])]),s._v(" "),e("td",[s._v("字符范围。**匹配指定范围内的任意字符。**例如，"),e("code",[s._v("[a-z]")]),s._v(" 可以匹配 "),e("code",[s._v("a")]),s._v(" 到 "),e("code",[s._v("z")]),s._v(" 范围内的任意小写字母字符。")])]),s._v(" "),e("tr",[e("td",[e("code",[s._v("[^a-z]")])]),s._v(" "),e("td",[s._v("排除型的字符范围。"),e("strong",[s._v("匹配任何不在指定范围内的任意字符")]),s._v("。例如，"),e("code",[s._v("[^a-z]")]),s._v(" 可以匹配任何不在 "),e("code",[s._v("a")]),s._v(" 到 "),e("code",[s._v("z")]),s._v(" 范围内的任意字符。")])])])]),s._v(" "),e("h4",{attrs:{id:"优先级"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#优先级"}},[s._v("#")]),s._v(" 优先级")]),s._v(" "),e("p",[s._v("优先级为从上到下从左到右，依次降低：")]),s._v(" "),e("table",[e("thead",[e("tr",[e("th",[s._v("运算符")]),s._v(" "),e("th",[s._v("说明")])])]),s._v(" "),e("tbody",[e("tr",[e("td",[e("code",[s._v("\\")])]),s._v(" "),e("td",[s._v("转义符")])]),s._v(" "),e("tr",[e("td",[e("code",[s._v("()")]),s._v("，"),e("code",[s._v("(?:)")]),s._v("，"),e("code",[s._v("(?=)")]),s._v("，"),e("code",[s._v("[]")])]),s._v(" "),e("td",[s._v("括号和中括号")])]),s._v(" "),e("tr",[e("td",[e("code",[s._v("*")]),s._v("，"),e("code",[s._v("+")]),s._v("，"),e("code",[s._v("?")]),s._v("，"),e("code",[s._v("{n}")]),s._v("，"),e("code",[s._v("{n,}")]),s._v("，"),e("code",[s._v("{n,m}")])]),s._v(" "),e("td",[s._v("限定符")])]),s._v(" "),e("tr",[e("td",[e("code",[s._v("^")]),s._v("，"),e("code",[s._v("$")]),s._v("，"),e("code",[s._v("\\")]),s._v(" 任何元字符")]),s._v(" "),e("td",[s._v("定位点和序列")])]),s._v(" "),e("tr",[e("td",[s._v("｜")]),s._v(" "),e("td",[s._v("选择")])])])]),s._v(" "),e("p",[s._v("更多正则表达式的内容可以参考以下链接：")]),s._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"http://zh.wikipedia.org/wiki/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F",target:"_blank",rel:"noopener noreferrer"}},[s._v("正则表达式 wiki"),e("OutboundLink")],1)]),s._v(" "),e("li",[e("a",{attrs:{href:"http://www.greenend.org.uk/rjk/tech/regexp.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("几种正则表达式引擎的语法差异"),e("OutboundLink")],1)]),s._v(" "),e("li",[e("a",{attrs:{href:"http://en.wikipedia.org/wiki/Comparison_of_regular_expression_engines",target:"_blank",rel:"noopener noreferrer"}},[s._v("各语言各平台对正则表达式的支持"),e("OutboundLink")],1)])]),s._v(" "),e("p",[s._v("regex 的思导图：")]),s._v(" "),e("p",[e("img",{attrs:{src:a(637),alt:"image-20220531195840927"}})]),s._v(" "),e("h2",{attrs:{id:"grep-模式匹配命令"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#grep-模式匹配命令"}},[s._v("#")]),s._v(" grep 模式匹配命令")]),s._v(" "),e("p",[s._v("上面空谈了那么多正则表达式的内容也并没有提及具体该如何使用它，实在枯燥，如果说正则表达式是一门武功，那它也只能算得上一些口诀招式罢了，要把它真正练起来还得需要一些兵器在手才行，这里我们要介绍的 "),e("code",[s._v("grep")]),s._v(" 命令以及后面要讲的 "),e("code",[s._v("sed")]),s._v("，"),e("code",[s._v("awk")]),s._v(" 这些就该算作是这样的兵器了。")]),s._v(" "),e("h3",{attrs:{id:"基本操作"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#基本操作"}},[s._v("#")]),s._v(" 基本操作")]),s._v(" "),e("p",[e("code",[s._v("grep")]),s._v(" 命令用于打印输出文本中匹配的模式串，它使用正则表达式作为模式匹配的条件。"),e("code",[s._v("grep")]),s._v(" 支持三种正则表达式引擎，分别用三个参数指定：")]),s._v(" "),e("table",[e("thead",[e("tr",[e("th",[s._v("参数")]),s._v(" "),e("th",[s._v("说明")])])]),s._v(" "),e("tbody",[e("tr",[e("td",[e("code",[s._v("-E")])]),s._v(" "),e("td",[s._v("POSIX 扩展正则表达式，ERE")])]),s._v(" "),e("tr",[e("td",[e("code",[s._v("-G")])]),s._v(" "),e("td",[s._v("POSIX 基本正则表达式，BRE")])]),s._v(" "),e("tr",[e("td",[e("code",[s._v("-P")])]),s._v(" "),e("td",[s._v("Perl 正则表达式，PCRE")])])])]),s._v(" "),e("p",[s._v("不过在你没学过 perl 语言的大多数情况下你将只会使用到 "),e("code",[s._v("ERE")]),s._v(" 和 "),e("code",[s._v("BRE")]),s._v("，所以我们接下来的内容都不会讨论到 PCRE 中特有的一些正则表达式语法（它们之间大部分内容是存在交集的，所以你不用担心会遗漏多少重要内容）。")]),s._v(" "),e("p",[s._v("在通过"),e("code",[s._v("grep")]),s._v("命令使用正则表达式之前，先介绍一下它的常用参数：")]),s._v(" "),e("table",[e("thead",[e("tr",[e("th",[s._v("参数")]),s._v(" "),e("th",[s._v("说明")])])]),s._v(" "),e("tbody",[e("tr",[e("td",[e("code",[s._v("-b")])]),s._v(" "),e("td",[s._v("将二进制文件作为文本来进行匹配")])]),s._v(" "),e("tr",[e("td",[e("code",[s._v("-c")])]),s._v(" "),e("td",[s._v("统计以模式匹配的数目")])]),s._v(" "),e("tr",[e("td",[e("code",[s._v("-i")])]),s._v(" "),e("td",[s._v("忽略大小写")])]),s._v(" "),e("tr",[e("td",[e("code",[s._v("-n")])]),s._v(" "),e("td",[s._v("显示匹配文本所在行的行号")])]),s._v(" "),e("tr",[e("td",[e("code",[s._v("-v")])]),s._v(" "),e("td",[s._v("反选，输出不匹配行的内容")])]),s._v(" "),e("tr",[e("td",[e("code",[s._v("-r")])]),s._v(" "),e("td",[s._v("递归匹配查找")])]),s._v(" "),e("tr",[e("td",[e("code",[s._v("-A n")])]),s._v(" "),e("td",[s._v("n 为正整数，表示 after 的意思，除了列出匹配行之外，还列出后面的 n 行")])]),s._v(" "),e("tr",[e("td",[e("code",[s._v("-B n")])]),s._v(" "),e("td",[s._v("n 为正整数，表示 before 的意思，除了列出匹配行之外，还列出前面的 n 行")])]),s._v(" "),e("tr",[e("td",[e("code",[s._v("--color=auto")])]),s._v(" "),e("td",[s._v("将输出中的匹配项设置为自动颜色显示")])])])]),s._v(" "),e("blockquote",[e("p",[s._v("注：在大多数发行版中是默认设置了 grep 的颜色的，你可以通过参数指定或修改"),e("code",[s._v("GREP_COLOR")]),s._v("环境变量。")])]),s._v(" "),e("p",[e("img",{attrs:{src:a(638),alt:"image-20220531195848557"}})]),s._v(" "),e("h3",{attrs:{id:"使用正则表达式"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#使用正则表达式"}},[s._v("#")]),s._v(" 使用正则表达式")]),s._v(" "),e("h4",{attrs:{id:"使用基本正则表达式-bre"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#使用基本正则表达式-bre"}},[s._v("#")]),s._v(" 使用基本正则表达式，BRE")]),s._v(" "),e("ul",[e("li",[s._v("位置")])]),s._v(" "),e("p",[s._v("查找 "),e("code",[s._v("/etc/group")]),s._v(" 文件中以 "),e("code",[s._v("shiyanlou")]),s._v(" 为开头的行")]),s._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'shiyanlou'")]),s._v(" /etc/group\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'^shiyanlou'")]),s._v(" /etc/group\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("p",[e("img",{attrs:{src:a(639),alt:"image-20220531195855023"}})]),s._v(" "),e("ul",[e("li",[s._v("数量")])]),s._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 将匹配以'z'开头以'o'结尾的所有字符串")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'zero\\nzo\\nzoo'")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'z.*o'")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 将匹配以'z'开头以'o'结尾，中间包含一个任意字符的字符串")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'zero\\nzo\\nzoo'")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'z.o'")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 将匹配以'z'开头，以任意多个'o'结尾的字符串")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'zero\\nzo\\nzoo'")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'zo*'")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br")])]),e("p",[s._v("注意：其中 "),e("code",[s._v("\\n")]),s._v(" 为换行符")]),s._v(" "),e("p",[e("img",{attrs:{src:a(640),alt:"image-20220531195900580"}})]),s._v(" "),e("ul",[e("li",[s._v("选择")])]),s._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# grep默认是区分大小写的，这里将匹配所有的小写字母")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'1234\\nabcd'")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'[a-z]'")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 将匹配所有的数字")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'1234\\nabcd'")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'[0-9]'")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 将匹配所有的数字")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'1234\\nabcd'")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'[[:digit:]]'")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 将匹配所有的小写字母")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'1234\\nabcd'")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'[[:lower:]]'")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 将匹配所有的大写字母")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'1234\\nabcd'")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'[[:upper:]]'")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 将匹配所有的字母和数字，包括0-9，a-z，A-Z")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'1234\\nabcd'")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'[[:alnum:]]'")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 将匹配所有的字母")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'1234\\nabcd'")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'[[:alpha:]]'")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br")])]),e("p",[e("img",{attrs:{src:a(641),alt:"image-20220531195908506"}})]),s._v(" "),e("p",[s._v("下面包含完整的特殊符号及说明：")]),s._v(" "),e("table",[e("thead",[e("tr",[e("th",[s._v("特殊符号")]),s._v(" "),e("th",[s._v("说明")])])]),s._v(" "),e("tbody",[e("tr",[e("td",[e("code",[s._v("[:alnum:]")])]),s._v(" "),e("td",[s._v("代表英文大小写字母及数字，亦即 0-9，A-Z，a-z")])]),s._v(" "),e("tr",[e("td",[e("code",[s._v("[:alpha:]")])]),s._v(" "),e("td",[s._v("代表任何英文大小写字母，亦即 A-Z，a-z")])]),s._v(" "),e("tr",[e("td",[e("code",[s._v("[:blank:]")])]),s._v(" "),e("td",[s._v("代表空白键与 "),e("code",[s._v("[Tab]")]),s._v(" 按键两者")])]),s._v(" "),e("tr",[e("td",[e("code",[s._v("[:cntrl:]")])]),s._v(" "),e("td",[s._v("代表键盘上面的控制按键，亦即包括 CR，LF，Tab，Del...")])]),s._v(" "),e("tr",[e("td",[e("code",[s._v("[:digit:]")])]),s._v(" "),e("td",[s._v("代表数字而已，亦即 0-9")])]),s._v(" "),e("tr",[e("td",[e("code",[s._v("[:graph:]")])]),s._v(" "),e("td",[s._v("除了空白字节（空白键与 [Tab] 按键）外的其他所有按键")])]),s._v(" "),e("tr",[e("td",[e("code",[s._v("[:lower:]")])]),s._v(" "),e("td",[s._v("代表小写字母，亦即 a-z")])]),s._v(" "),e("tr",[e("td",[e("code",[s._v("[:print:]")])]),s._v(" "),e("td",[s._v("代表任何可以被列印出来的字符")])]),s._v(" "),e("tr",[e("td",[e("code",[s._v("[:punct:]")])]),s._v(" "),e("td",[s._v("代表标点符号（punctuation symbol），即："),e("code",[s._v('"')]),s._v("，"),e("code",[s._v("'")]),s._v("，"),e("code",[s._v("?")]),s._v("，"),e("code",[s._v("!")]),s._v("，"),e("code",[s._v(";")]),s._v("，"),e("code",[s._v(":")]),s._v("，"),e("code",[s._v("#")]),s._v("，"),e("code",[s._v("$")]),s._v("...")])]),s._v(" "),e("tr",[e("td",[e("code",[s._v("[:upper:]")])]),s._v(" "),e("td",[s._v("代表大写字母，亦即 A-Z")])]),s._v(" "),e("tr",[e("td",[e("code",[s._v("[:space:]")])]),s._v(" "),e("td",[s._v("任何会产生空白的字符，包括空格键，"),e("code",[s._v("[Tab]")]),s._v("，CR 等等")])]),s._v(" "),e("tr",[e("td",[e("code",[s._v("[:xdigit:]")])]),s._v(" "),e("td",[s._v("代表 16 进位的数字类型，因此包括： 0-9，A-F，a-f 的数字与字节")])])])]),s._v(" "),e("blockquote",[e("p",[e("strong",[s._v("注意")]),s._v("：之所以要使用特殊符号，是因为上面的 "),e("code",[s._v("[a-z]")]),s._v(" 不是在所有情况下都管用，这还与主机当前的语系有关，即设置在 "),e("code",[s._v("LANG")]),s._v(" 环境变量的值，"),e("code",[s._v("zh_CN.UTF-8")]),s._v(" 的话 "),e("code",[s._v("[a-z]")]),s._v('，即为所有小写字母，其它语系可能是大小写交替的如，"a A b B...z Z"，'),e("code",[s._v("[a-z]")]),s._v(" 中就可能包含大写字母。所以在使用 "),e("code",[s._v("[a-z]")]),s._v(" 时请确保当前语系的影响，使用 "),e("code",[s._v("[:lower:]")]),s._v(" 则不会有这个问题。")])]),s._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 排除字符")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'geek\\ngood'")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'[^o]'")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("blockquote",[e("p",[s._v("当 "),e("code",[s._v("^")]),s._v(" 放到中括号内为排除字符，否则表示行首。")])]),s._v(" "),e("p",[e("img",{attrs:{src:a(642),alt:"image-20220531195914169"}})]),s._v(" "),e("h4",{attrs:{id:"使用扩展正则表达式-ere"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#使用扩展正则表达式-ere"}},[s._v("#")]),s._v(" 使用扩展正则表达式，ERE")]),s._v(" "),e("p",[s._v("要通过 "),e("code",[s._v("grep")]),s._v(" 使用扩展正则表达式需要加上 "),e("code",[s._v("-E")]),s._v(" 参数，或使用 "),e("code",[s._v("egrep")]),s._v("。")]),s._v(" "),e("ul",[e("li",[s._v("数量")])]),s._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# 只匹配"zo"')]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'zero\\nzo\\nzoo'")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" -E "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'zo{1}'")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# 匹配以"zo"开头的所有单词')]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'zero\\nzo\\nzoo'")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" -E "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'zo{1,}'")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br")])]),e("blockquote",[e("p",[s._v("推荐掌握 "),e("code",[s._v("{n,m}")]),s._v(" 即可 "),e("code",[s._v("+")]),s._v("，"),e("code",[s._v("?")]),s._v("，"),e("code",[s._v("*")]),s._v(" 这几个不太直观，且容易弄混淆。")])]),s._v(" "),e("ul",[e("li",[s._v("选择")])]),s._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# 匹配"www.shiyanlou.com"和"www.google.com"')]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'www.shiyanlou.com\\nwww.baidu.com\\nwww.google.com'")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" -E "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'www\\.(shiyanlou|google)\\.com'")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# 或者匹配不包含"baidu"的内容')]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'www.shiyanlou.com\\nwww.baidu.com\\nwww.google.com'")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" -Ev "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'www\\.baidu\\.com'")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br")])]),e("blockquote",[e("p",[s._v("因为 "),e("code",[s._v(".")]),s._v(" 号有特殊含义，所以需要转义。")])]),s._v(" "),e("p",[e("img",{attrs:{src:a(643),alt:"image-20220531195919422"}})]),s._v(" "),e("p",[s._v("关于正则表达式和 "),e("code",[s._v("grep")]),s._v(" 命令的内容就介绍这么多，下面会介绍两个更强大的工具 "),e("code",[s._v("sed")]),s._v(" 和 "),e("code",[s._v("awk")]),s._v("，但同样也正是因为这两个工具的强大，我们的内容无法包含它们的全部，这里将只对基本内容作介绍。")]),s._v(" "),e("h2",{attrs:{id:"sed-流编辑器"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#sed-流编辑器"}},[s._v("#")]),s._v(" sed 流编辑器")]),s._v(" "),e("p",[e("code",[s._v("sed")]),s._v(' 工具在 man 手册里面的全名为"sed - stream editor for filtering and transforming text "，意即，用于过滤和转换文本的流编辑器。')]),s._v(" "),e("p",[s._v("在 Linux/UNIX 的世界里敢称为编辑器的工具，大都非等闲之辈，比如前面的 "),e("code",[s._v("vi/vim")]),s._v("（编辑器之神），"),e("code",[s._v("emacs")]),s._v("（神的编辑器），"),e("code",[s._v("gedit")]),s._v(" 这些编辑器。"),e("code",[s._v("sed")]),s._v(" 与上述的最大不同之处在于它是一个非交互式的编辑器，下面我们就开始介绍 "),e("code",[s._v("sed")]),s._v(" 这个编辑器。")]),s._v(" "),e("h3",{attrs:{id:"sed-常用参数介绍"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#sed-常用参数介绍"}},[s._v("#")]),s._v(" sed 常用参数介绍")]),s._v(" "),e("p",[s._v("sed 命令基本格式：")]),s._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("参数"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(". "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("执行命令"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("输入文件"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 形如：")]),s._v("\n$ "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" -i "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'s/sad/happy/'")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("test")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# 表示将test文件中的"sad"替换为"happy"')]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("table",[e("thead",[e("tr",[e("th",[s._v("参数")]),s._v(" "),e("th",[s._v("说明")])])]),s._v(" "),e("tbody",[e("tr",[e("td",[e("code",[s._v("-n")])]),s._v(" "),e("td",[s._v("安静模式，只打印受影响的行，默认打印输入数据的全部内容")])]),s._v(" "),e("tr",[e("td",[e("code",[s._v("-e")])]),s._v(" "),e("td",[s._v("用于在脚本中添加多个执行命令一次执行，在命令行中执行多个命令通常不需要加该参数")])]),s._v(" "),e("tr",[e("td",[e("code",[s._v("-f filename")])]),s._v(" "),e("td",[s._v("指定执行 filename 文件中的命令")])]),s._v(" "),e("tr",[e("td",[e("code",[s._v("-r")])]),s._v(" "),e("td",[s._v("使用扩展正则表达式，默认为标准正则表达式")])]),s._v(" "),e("tr",[e("td",[e("code",[s._v("-i")])]),s._v(" "),e("td",[s._v("将直接修改输入文件内容，而不是打印到标准输出设备")])])])]),s._v(" "),e("h3",{attrs:{id:"sed-编辑器的执行命令-这里-执行-解释为名词"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#sed-编辑器的执行命令-这里-执行-解释为名词"}},[s._v("#")]),s._v(" sed 编辑器的执行命令（这里”执行“解释为名词）")]),s._v(" "),e("p",[s._v("sed 执行命令格式：")]),s._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("n1"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(",n2"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("command\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("n1"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("~step"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("command\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("p",[s._v("其中一些命令可以在后面加上作用范围，形如：")]),s._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" -i "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'s/sad/happy/g'")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("test")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# g 表示全局范围")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" -i "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'s/sad/happy/4'")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("test")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 4 表示指定行中的第四个匹配字符串")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("p",[s._v("其中 "),e("code",[s._v("n1,n2")]),s._v(" 表示输入内容的行号，它们之间为 "),e("code",[s._v(",")]),s._v(" 逗号则表示从 n1 到 n2 行，如果为 "),e("code",[s._v("~")]),s._v(" 波浪号则表示从 n1 开始以 step 为步进的所有行；command 为执行动作，下面为一些常用动作指令：")]),s._v(" "),e("table",[e("thead",[e("tr",[e("th",[s._v("命令")]),s._v(" "),e("th",[s._v("说明")])])]),s._v(" "),e("tbody",[e("tr",[e("td",[e("code",[s._v("s")])]),s._v(" "),e("td",[s._v("行内替换")])]),s._v(" "),e("tr",[e("td",[e("code",[s._v("c")])]),s._v(" "),e("td",[s._v("整行替换")])]),s._v(" "),e("tr",[e("td",[e("code",[s._v("a")])]),s._v(" "),e("td",[s._v("插入到指定行的后面")])]),s._v(" "),e("tr",[e("td",[e("code",[s._v("i")])]),s._v(" "),e("td",[s._v("插入到指定行的前面")])]),s._v(" "),e("tr",[e("td",[e("code",[s._v("p")])]),s._v(" "),e("td",[s._v("打印指定行，通常与 "),e("code",[s._v("-n")]),s._v(" 参数配合使用")])]),s._v(" "),e("tr",[e("td",[e("code",[s._v("d")])]),s._v(" "),e("td",[s._v("删除指定行")])])])]),s._v(" "),e("h3",{attrs:{id:"sed-操作举例"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#sed-操作举例"}},[s._v("#")]),s._v(" sed 操作举例")]),s._v(" "),e("p",[s._v("我们先找一个用于练习的文本文件：")]),s._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("cp")]),s._v(" /etc/passwd ~\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("h4",{attrs:{id:"打印指定行"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#打印指定行"}},[s._v("#")]),s._v(" 打印指定行")]),s._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 打印2-5行")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("nl")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("passwd")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" -n "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'2,5p'")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 打印奇数行")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("nl")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("passwd")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" -n "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'1~2p'")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br")])]),e("p",[e("img",{attrs:{src:a(644),alt:"image-20220531195926939"}})]),s._v(" "),e("h4",{attrs:{id:"行内替换"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#行内替换"}},[s._v("#")]),s._v(" 行内替换")]),s._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# 将输入文本中"shiyanlou" 全局替换为"hehe"，并只打印替换的那一行，注意这里不能省略最后的"p"命令')]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" -n "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'s/shiyanlou/hehe/gp'")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("passwd")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("blockquote",[e("p",[s._v("行内替换可以结合正则表达式使用。")])]),s._v(" "),e("h4",{attrs:{id:"删除某行"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#删除某行"}},[s._v("#")]),s._v(" 删除某行")]),s._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("nl")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("passwd")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"shiyanlou"')]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 删除第30行")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" -i "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'30d'")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("passwd")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("img",{attrs:{src:a(645),alt:"image-20220531195932271"}})]),s._v(" "),e("p",[s._v("关于 sed 命令就介绍这么多，你如果希望了解更多 sed 的高级用法，你可以参看如下链接：")]),s._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"http://coolshell.cn/articles/9104.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("sed 简明教程"),e("OutboundLink")],1)]),s._v(" "),e("li",[e("a",{attrs:{href:"http://sed.sourceforge.net/sed1line_zh-CN.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("sed 单行脚本快速参考"),e("OutboundLink")],1)]),s._v(" "),e("li",[e("a",{attrs:{href:"http://www.gnu.org/software/sed/manual/sed.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("sed 完全手册"),e("OutboundLink")],1)])]),s._v(" "),e("h2",{attrs:{id:"awk-文本处理语言"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#awk-文本处理语言"}},[s._v("#")]),s._v(" awk 文本处理语言")]),s._v(" "),e("p",[s._v("看到上面的标题，你可能会感到惊异，难道我们这里要学习的是一门“语言”么，确切的说，我们是要在这里学习 "),e("code",[s._v("awk")]),s._v(" 文本处理语言，只是我们并不会在这里学习到比较完整的关于 "),e("code",[s._v("awk")]),s._v(" 的内容，还是因为前面的原因，它太强大了，它的应用无处不在，我们无法在这里以简短的文字描述面面俱到，如果你有目标成为一个 linux 系统管理员，确实想学好 "),e("code",[s._v("awk")]),s._v("，可以学习我们的其他 Linux 课程。下面的内容，我们就作为一个关于 "),e("code",[s._v("awk")]),s._v(" 的入门体验章节吧，其中会介绍一些 "),e("code",[s._v("awk")]),s._v(" 的常用操作。")]),s._v(" "),e("h3",{attrs:{id:"awk-介绍"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#awk-介绍"}},[s._v("#")]),s._v(" awk 介绍")]),s._v(" "),e("p",[s._v("AWK 是一种优良的文本处理工具，Linux 及 Unix 环境中现有的功能最强大的数据处理引擎之一。其名称得自于它的创始人 Alfred Aho（阿尔佛雷德·艾侯）、Peter Jay Weinberger（彼得·温伯格）和 Brian Wilson Kernighan（布莱恩·柯林汉)姓氏的首个字母 "),e("code",[s._v("AWK")]),s._v("，三位创建者已将它正式定义为“样式扫描和处理语言”。它允许你创建简短的程序，这些程序读取输入文件、为数据排序、处理数据、对输入执行计算以及生成报表，还有无数其他的功能。最简单地说，AWK 是一种用于处理文本的编程语言工具。")]),s._v(" "),e("p",[s._v("在大多数 Linux 发行版上面，实际我们使用的是 gawk（GNU awk，awk 的 GNU 版本），在我们的环境中 ubuntu 上，默认提供的是 mawk，不过我们通常可以直接使用 awk 命令（awk 语言的解释器），因为系统已经为我们创建好了 awk 指向 mawk 的符号链接。")]),s._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[s._v("ll /usr/bin/awk\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("img",{attrs:{src:a(646),alt:"image-20220531195939282"}})]),s._v(" "),e("blockquote",[e("p",[s._v("nawk： 在 20 世纪 80 年代中期，对 awk 语言进行了更新，并不同程度地使用一种称为 nawk(new awk) 的增强版本对其进行了替换。许多系统中仍然存在着旧的 awk 解释器，但通常将其安装为 oawk (old awk) 命令，而 nawk 解释器则安装为主要的 awk 命令，也可以使用 nawk 命令。Dr. Kernighan 仍然在对 nawk 进行维护，与 gawk 一样，它也是开放源代码的，并且可以免费获得;")])]),s._v(" "),e("blockquote",[e("p",[s._v("gawk： 是 GNU Project 的 awk 解释器的开放源代码实现。尽管早期的 GAWK 发行版是旧的 AWK 的替代程序，但不断地对其进行了更新，以包含 NAWK 的特性;")])]),s._v(" "),e("blockquote",[e("p",[s._v("mawk 也是 awk 编程语言的一种解释器，mawk 遵循 POSIX 1003.2 （草案 11.3）定义的 AWK 语言，包含了一些没有在 AWK 手册中提到的特色，同时 mawk 提供一小部分扩展，另外据说 mawk 是实现最快的 awk。")])]),s._v(" "),e("h3",{attrs:{id:"awk-的一些基础概念"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#awk-的一些基础概念"}},[s._v("#")]),s._v(" awk 的一些基础概念")]),s._v(" "),e("p",[s._v("awk 所有的操作都是基于 pattern(模式)—action(动作)对来完成的，如下面的形式：")]),s._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[s._v("pattern "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("action"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[s._v("你可以看到就如同很多编程语言一样，它将所有的动作操作用一对 "),e("code",[s._v("{}")]),s._v(" 花括号包围起来。其中 pattern 通常是表示用于匹配输入的文本的“关系式”或“正则表达式”，action 则是表示匹配后将执行的动作。在一个完整 awk 操作中，这两者可以只有其中一个，如果没有 pattern 则默认匹配输入的全部文本，如果没有 action 则默认为打印匹配内容到屏幕。")]),s._v(" "),e("p",[e("code",[s._v("awk")]),s._v(" 处理文本的方式，是将文本分割成一些“字段”，然后再对这些字段进行处理，默认情况下，awk 以空格作为一个字段的分割符，不过这不是固定的，你可以任意指定分隔符，下面将告诉你如何做到这一点。")]),s._v(" "),e("h3",{attrs:{id:"awk-命令基本格式"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#awk-命令基本格式"}},[s._v("#")]),s._v(" awk 命令基本格式")]),s._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("-F fs"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("-v "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("var")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("value"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("-f prog-file "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'program text'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("file"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v("."),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[s._v("其中 "),e("code",[s._v("-F")]),s._v(" 参数用于预先指定前面提到的字段分隔符（还有其他指定字段的方式），"),e("code",[s._v("-v")]),s._v(" 用于预先为 "),e("code",[s._v("awk")]),s._v(" 程序指定变量，"),e("code",[s._v("-f")]),s._v(" 参数用于指定 "),e("code",[s._v("awk")]),s._v(" 命令要执行的程序文件，或者在不加 "),e("code",[s._v("-f")]),s._v(" 参数的情况下直接将程序语句放在这里，最后为 "),e("code",[s._v("awk")]),s._v(" 需要处理的文本输入，且可以同时输入多个文本文件。现在我们还是直接来具体体验一下吧。")]),s._v(" "),e("h3",{attrs:{id:"awk-操作体验"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#awk-操作体验"}},[s._v("#")]),s._v(" awk 操作体验")]),s._v(" "),e("p",[s._v("先用 vim 新建一个文本文档：")]),s._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("vim")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("test")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[s._v("包含如下内容：")]),s._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[s._v("I like linux\nwww.shiyanlou.com\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("ul",[e("li",[s._v("使用 awk 将文本内容打印到终端：")])]),s._v(" "),e("div",{staticClass:"language-sh line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# "quote>" 不用输入')]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{\nquote> print\nquote> }'")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("test")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 或者写到一行")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{print}'")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("test")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br")])]),e("p",[e("img",{attrs:{src:a(647),alt:"image-20220531195949252"}})]),s._v(" "),e("p",[s._v("说明:在这个操作中我是省略了 "),e("code",[s._v("pattern")]),s._v("，所以 "),e("code",[s._v("awk")]),s._v(" 会默认匹配输入文本的全部内容，然后在 "),e("code",[s._v("{}")]),s._v(" 花括号中执行动作，即 "),e("code",[s._v("print")]),s._v(" 打印所有匹配项，这里是全部文本内容。")]),s._v(" "),e("ul",[e("li",[s._v("将 test 的第一行的每个字段单独显示为一行：")])]),s._v(" "),e("div",{staticClass:"language-sh line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[s._v("$ "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('\'{\n> if(NR==1){\n> print $1 "\\n" $2 "\\n" $3\n> } else {\n> print}\n> }\'')]),s._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("test")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 或者")]),s._v("\n$ "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{\n> if(NR==1){\n> OFS=\"\\n\"\n> print $1, $2, $3\n> } else {\n> print}\n> }'")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("test")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br")])]),e("p",[e("img",{attrs:{src:a(648),alt:"image-20220531195955558"}})]),s._v(" "),e("p",[s._v("说明:你首先应该注意的是，这里我使用了 "),e("code",[s._v("awk")]),s._v(" 语言的分支选择语句"),e("code",[s._v("if")]),s._v("，它的使用和很多高级语言如 "),e("code",[s._v("C/C++")]),s._v(" 语言基本一致，如果你有这些语言的基础，这里将很好理解。另一个你需要注意的是 "),e("code",[s._v("NR")]),s._v(" 与 "),e("code",[s._v("OFS")]),s._v("，这两个是 "),e("code",[s._v("awk")]),s._v(" 内建的变量，"),e("code",[s._v("NR")]),s._v(" 表示当前读入的记录数，你可以简单的理解为当前处理的行数，"),e("code",[s._v("OFS")]),s._v(' 表示输出时的字段分隔符，默认为" "空格，如上图所见，我们将字段分隔符设置为 '),e("code",[s._v("\\n")]),s._v(" 换行符，所以第一行原本以空格为字段分隔的内容就分别输出到单独一行了。然后是 "),e("code",[s._v("$N")]),s._v(" 其中 N 为相应的字段号，这也是 "),e("code",[s._v("awk")]),s._v(" 的内建变量，它表示引用相应的字段，因为我们这里第一行只有三个字段，所以只引用到了 "),e("code",[s._v("$3")]),s._v("。除此之外另一个这里没有出现的 "),e("code",[s._v("$0")]),s._v("，它表示引用当前记录（当前行）的全部内容。")]),s._v(" "),e("ul",[e("li",[s._v("将 test 的第二行的以点为分段的字段换成以空格为分隔：")])]),s._v(" "),e("div",{staticClass:"language-sh line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v(" -F"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'.'")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('\'{\n> if(NR==2){\n> print $1 "\\t" $2 "\\t" $3\n> }}\'')]),s._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("test")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 或者")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('\'\n> BEGIN{\n> FS="."\n> OFS="\\t"  # 如果写为一行，两个动作语句之间应该以";"号分开\n> }{\n> if(NR==2){\n> print $1, $2, $3\n> }}\'')]),s._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("test")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br")])]),e("p",[e("img",{attrs:{src:a(649),alt:"image-20220531200001774"}})]),s._v(" "),e("p",[s._v("说明：这里的 "),e("code",[s._v("-F")]),s._v(" 参数，前面已经介绍过，它是用来预先指定待处理记录的字段分隔符。我们需要注意的是除了指定 "),e("code",[s._v("OFS")]),s._v(" 我们还可以在 "),e("code",[s._v("print")]),s._v(" 语句中直接打印特殊符号如这里的 "),e("code",[s._v("\\t")]),s._v("，"),e("strong",[s._v('print 打印的非变量内容都需要用""一对引号包围起来')]),s._v("。上面另一个版本，展示了实现预先指定变量分隔符的另一种方式，即使用 "),e("code",[s._v("BEGIN")]),s._v("，就这个表达式指示了，其后的动作将在所有动作之前执行，这里是 "),e("code",[s._v("FS")]),s._v(" 赋值了新的 "),e("code",[s._v(".")]),s._v(" 点号代替默认的空格。")]),s._v(" "),e("p",[e("strong",[s._v("注意")]),s._v(":首先说明一点，我们在学习和使用 awk 的时候应该尽可能将其作为一门程序语言来理解，这样将会使你学习起来更容易，所以初学阶段在练习 "),e("code",[s._v("awk")]),s._v(" 时应该尽量按照我那样的方式分多行按照一般程序语言的换行和缩进来输入，而不是全部写到一行（当然这在你熟练了之后是没有任何问题的）。")]),s._v(" "),e("h3",{attrs:{id:"awk-常用的内置变量"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#awk-常用的内置变量"}},[s._v("#")]),s._v(" awk 常用的内置变量")]),s._v(" "),e("table",[e("thead",[e("tr",[e("th",[s._v("变量名")]),s._v(" "),e("th",[s._v("说明")])])]),s._v(" "),e("tbody",[e("tr",[e("td",[e("code",[s._v("FILENAME")])]),s._v(" "),e("td",[s._v("当前输入文件名，若有多个文件，则只表示第一个。如果输入是来自标准输入，则为空字符串")])]),s._v(" "),e("tr",[e("td",[e("code",[s._v("$0")])]),s._v(" "),e("td",[s._v("当前记录的内容")])]),s._v(" "),e("tr",[e("td",[e("code",[s._v("$N")])]),s._v(" "),e("td",[s._v("N 表示字段号，最大值为"),e("code",[s._v("NF")]),s._v("变量的值")])]),s._v(" "),e("tr",[e("td",[e("code",[s._v("FS")])]),s._v(" "),e("td",[s._v("字段分隔符，由正则表达式表示，默认为空格")])]),s._v(" "),e("tr",[e("td",[e("code",[s._v("RS")])]),s._v(" "),e("td",[s._v("输入记录分隔符，默认为 "),e("code",[s._v("\\n")]),s._v("，即一行为一个记录")])]),s._v(" "),e("tr",[e("td",[e("code",[s._v("NF")])]),s._v(" "),e("td",[s._v("当前记录字段数")])]),s._v(" "),e("tr",[e("td",[e("code",[s._v("NR")])]),s._v(" "),e("td",[s._v("已经读入的记录数")])]),s._v(" "),e("tr",[e("td",[e("code",[s._v("FNR")])]),s._v(" "),e("td",[s._v("当前输入文件的记录数，请注意它与 NR 的区别")])]),s._v(" "),e("tr",[e("td",[e("code",[s._v("OFS")])]),s._v(" "),e("td",[s._v("输出字段分隔符，默认为空格")])]),s._v(" "),e("tr",[e("td",[e("code",[s._v("ORS")])]),s._v(" "),e("td",[s._v("输出记录分隔符，默认为 "),e("code",[s._v("\\n")])])])])]),s._v(" "),e("p",[s._v("关于"),e("code",[s._v("awk")]),s._v("的内容本课程将只会包含这些内容，如果你想了解更多，请期待后续课程，或者参看一下链接内容：")]),s._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"http://awk.readthedocs.org/en/latest/chapter-one.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("awk 程序设计语言"),e("OutboundLink")],1)]),s._v(" "),e("li",[e("a",{attrs:{href:"http://coolshell.cn/articles/9070.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("awk 简明教程"),e("OutboundLink")],1)]),s._v(" "),e("li",[e("a",{attrs:{href:"http://www.gnu.org/software/gawk/manual/gawk.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("awk 用户指南"),e("OutboundLink")],1)])])])}),[],!1,null,null,null);t.default=v.exports},637:function(s,t,a){s.exports=a.p+"assets/img/image-20220531195840927.0549c1bc.png"},638:function(s,t,a){s.exports=a.p+"assets/img/image-20220531195848557.edfe51fd.png"},639:function(s,t,a){s.exports=a.p+"assets/img/image-20220531195855023.7068ecd9.png"},640:function(s,t,a){s.exports=a.p+"assets/img/image-20220531195900580.32c7caa2.png"},641:function(s,t,a){s.exports=a.p+"assets/img/image-20220531195908506.2a5656d0.png"},642:function(s,t,a){s.exports=a.p+"assets/img/image-20220531195914169.16ea9e8f.png"},643:function(s,t,a){s.exports=a.p+"assets/img/image-20220531195919422.0863e93b.png"},644:function(s,t,a){s.exports=a.p+"assets/img/image-20220531195926939.c04fe754.png"},645:function(s,t,a){s.exports=a.p+"assets/img/image-20220531195932271.d1880a18.png"},646:function(s,t,a){s.exports=a.p+"assets/img/image-20220531195939282.f4876748.png"},647:function(s,t,a){s.exports=a.p+"assets/img/image-20220531195949252.ebcb3e57.png"},648:function(s,t,a){s.exports=a.p+"assets/img/image-20220531195955558.5785f06c.png"},649:function(s,t,a){s.exports=a.p+"assets/img/image-20220531200001774.0a8e1fe5.png"}}]);